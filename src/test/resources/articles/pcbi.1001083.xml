<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article" dtd-version="3.0" xml:lang="EN">
<front>
<journal-meta><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id><journal-id journal-id-type="pmc">ploscomp</journal-id><!--===== Grouping journal title elements =====--><journal-title-group><journal-title>PLoS Computational Biology</journal-title></journal-title-group><issn pub-type="ppub">1553-734X</issn><issn pub-type="epub">1553-7358</issn><publisher>
<publisher-name>Public Library of Science</publisher-name>
<publisher-loc>San Francisco, USA</publisher-loc></publisher></journal-meta>
<article-meta><article-id pub-id-type="publisher-id">10-PLCB-RA-2579R2</article-id><article-id pub-id-type="doi">10.1371/journal.pcbi.1001083</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group><subj-group subj-group-type="Discipline"><subject>Computational Biology/Synthetic Biology</subject></subj-group></article-categories><title-group><article-title>Automatic Design of Digital Synthetic Gene Circuits</article-title><alt-title alt-title-type="running-head">Automatic Circuit Design</alt-title></title-group><contrib-group>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Marchisio</surname><given-names>Mario A.</given-names></name><xref ref-type="aff" rid="aff1"/></contrib>
<contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>Stelling</surname><given-names>Jörg</given-names></name><xref ref-type="aff" rid="aff1"/><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib>
</contrib-group><aff id="aff1">          <addr-line>Department of Biosystems Science and Engineering and Swiss Institute of Bioinformatics, ETH Zurich, Basel, Switzerland</addr-line>       </aff><contrib-group>
<contrib contrib-type="editor" xlink:type="simple"><name name-style="western"><surname>Papin</surname><given-names>Jason A.</given-names></name>
<role>Editor</role>
<xref ref-type="aff" rid="edit1"/></contrib>
</contrib-group><aff id="edit1">University of Virginia, United States of America</aff><author-notes>
<corresp id="cor1">* E-mail: <email xlink:type="simple">joerg.stelling@bsse.ethz.ch</email></corresp>
<fn fn-type="con"><p>Conceived and designed the experiments: MAM JS. Performed the experiments: MAM. Analyzed the data: MAM. Contributed reagents/materials/analysis tools: MAM. Wrote the paper: MAM JS.</p></fn>
<fn fn-type="conflict"><p>The authors have declared that no competing interests exist.</p></fn></author-notes><pub-date pub-type="collection"><month>2</month><year>2011</year></pub-date><pub-date pub-type="epub"><day>17</day><month>2</month><year>2011</year></pub-date><volume>7</volume><issue>2</issue><elocation-id>e1001083</elocation-id><history>
<date date-type="received"><day>22</day><month>7</month><year>2010</year></date>
<date date-type="accepted"><day>13</day><month>1</month><year>2011</year></date>
</history><!--===== Grouping copyright info into permissions =====--><permissions><copyright-year>2011</copyright-year><copyright-holder>Marchisio, Stelling</copyright-holder><license><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions><abstract>
<p><italic>De novo</italic> computational design of synthetic gene circuits that achieve well-defined target functions is a hard task. Existing, brute-force approaches run optimization algorithms on the structure and on the kinetic parameter values of the network. However, more direct rational methods for automatic circuit design are lacking. Focusing on digital synthetic gene circuits, we developed a methodology and a corresponding tool for <italic>in silico</italic> automatic design. For a given truth table that specifies a circuit's input–output relations, our algorithm generates and ranks several possible circuit schemes without the need for any optimization. Logic behavior is reproduced by the action of regulatory factors and chemicals on the promoters and on the ribosome binding sites of biological Boolean gates. Simulations of circuits with up to four inputs show a faithful and unequivocal truth table representation, even under parametric perturbations and stochastic noise. A comparison with already implemented circuits, in addition, reveals the potential for simpler designs with the same function. Therefore, we expect the method to help both in devising new circuits and in simplifying existing solutions.</p>
</abstract><abstract abstract-type="summary"><title>Author Summary</title>
<p>Synthetic Biology is a novel discipline that aims at the construction of new biological systems able to perform specific tasks. Following the example of electrical engineering, most of the synthetic systems so far realized look like circuits where smaller DNA-encoded components are interconnected by the exchange of different kinds of molecules. According to this modular approach, we developed, in a previous work, a tool for the visual design of new genetic circuits whose components are displayed on the computer screen and connected through hypothetical wires where molecules flow. Here, we present an extension of this tool that automatically computes the structure of a digital gene circuit–where the inputs and the output take only 0/1 values–by applying procedures commonly used in electrical engineering to biology. In this way, our method generalizes and simplifies the design of genetic circuits far more complex than the ones so far realized. Moreover, different from other currently used methods, our approach limits the use of optimization procedures and drastically reduces the computational time necessary to derive the circuit structure. Future improvements can be achieved by exploiting some more biological mechanisms able to mimic Boolean behavior, without a substantial growth of the algorithmic complexity.</p>
</abstract><funding-group><funding-statement>We gratefully acknowledge financial support by the EU FP6 projects EMERGENCE (contract 043338) and COBIOS (contract 043379). The funder had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement></funding-group><counts><page-count count="13"/></counts></article-meta>
</front>
<body><sec id="s1">
<title>Introduction</title>
<p>A central concept of Synthetic Biology <xref ref-type="bibr" rid="pcbi.1001083-Endy1">[1]</xref> is the rational design of synthetic gene circuits by means of modularized, standard parts, which are DNA traits with well-defined functions. The field aims at adapting methods and ideas–such as part <italic>composability</italic> and <italic>abstraction hierarchy</italic>–from (electrical) engineering to biology. Several computational tools embracing these concepts have been developed (see <xref ref-type="bibr" rid="pcbi.1001083-Marchisio1">[2]</xref> for a review). Moreover, some tools permit to realize circuits in a <italic>drag and drop</italic> way as it is typical in electronics <xref ref-type="bibr" rid="pcbi.1001083-Goler1">[3]</xref>–<xref ref-type="bibr" rid="pcbi.1001083-Chandran1">[5]</xref>. Nevertheless, <italic>de novo</italic> design of circuits able to reproduce a target function is not an easy task and its <italic>automation</italic> represents a major challenge in Synthetic Biology.</p>
<p>Previously, François and Hakim <xref ref-type="bibr" rid="pcbi.1001083-Franois1">[6]</xref> showed that small networks characterized by a desired behavior can be obtained by evolutionary optimization of a set of independent circuits. Similar optimization-based tools like Genetdes <xref ref-type="bibr" rid="pcbi.1001083-Rodrigo1">[7]</xref> and OptCircuit <xref ref-type="bibr" rid="pcbi.1001083-Dasika1">[8]</xref> use simulated annealing and mixed integer dynamic optimization, respectively. These approaches yielded interesting circuit designs, but they have several inherent limitations. Computational complexity requires very simplified models that do not represent basic parts but lump functionalities of entire genes. Similarly, brute-force optimization can only cope with rather small networks, and it requires dual optimization of circuit structure and of kinetic parameter values. Hence, more direct, rational design methods are desired.</p>
<p>Here, instead of looking for a general solution to the automatic design challenge, we focus on <italic>digital</italic> (logical) circuits. These circuits employ Boolean (binary) logic where input and output signals can take only two values: 0 (low signal) and 1 (high signal). In the simplest case, a Boolean <italic>gate</italic> uses two input signals to compute a single logical output. More complex digital circuits convert <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e001" xlink:type="simple"/></inline-formula> inputs into a single output. In both cases, the input-output relation is represented by a <italic>truth table</italic> where each entry specifies one of the possible <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e002" xlink:type="simple"/></inline-formula> combinations of input signal values and the corresponding binary output.</p>
<p>In biology, digital circuits are important for several reasons. First, logical gates such as those determined by the action of two different activators on a promoter are abundant in natural systems. They are often found in association with feed-forward loop (FFL) motifs and provide more complicated functionalities such as sign sensitive delays <xref ref-type="bibr" rid="pcbi.1001083-Mangan1">[9]</xref>, <xref ref-type="bibr" rid="pcbi.1001083-Kalir1">[10]</xref> and pulse generation <xref ref-type="bibr" rid="pcbi.1001083-Mangan2">[11]</xref>. More complex networks of several FFLs interacting with basic Boolean gates control sporulation in <italic>B. subtilis</italic> <xref ref-type="bibr" rid="pcbi.1001083-Eichenberger1">[12]</xref> as well as the neuronal system of <italic>C. elegans</italic> <xref ref-type="bibr" rid="pcbi.1001083-Kashtan1">[13]</xref> (see <xref ref-type="bibr" rid="pcbi.1001083-Alon1">[14]</xref> for a recent review). An analysis of possible implementations of logical gates could, thus, help further our understanding of natural biological networks.</p>
<p>In synthetic biology, secondly, complex digital circuits are required for the construction of biosensors and molecular computers. Biosensors should respond to well-defined external cues that may be specified with a truth table. The more inputs can be sensed, the better is the ability of the (digital) biosensor to discriminate between similar environmental conditions. Such biosensors could be integrated, for instance, into bioreactors for the production of biofuels <xref ref-type="bibr" rid="pcbi.1001083-Khalil1">[15]</xref>. Furthermore, they could play an important role in disease treatment—Anderson <italic>et al.</italic> <xref ref-type="bibr" rid="pcbi.1001083-Anderson1">[16]</xref> implemented a biosensor that mimics a logical gate to control bacterial invasion of tumor cells in response to signals from the tumor environment. Even more complex biosensors could work as molecular computers that perform a diagnosis on the basis of the sensed substances and release drugs if necessary <xref ref-type="bibr" rid="pcbi.1001083-Kahan1">[17]</xref>.</p>
<p>Motivated by these two aspects, several synthetic gene circuits that implement Boolean logic have been realized experimentally in the past years (e.g. <xref ref-type="bibr" rid="pcbi.1001083-Weiss1">[18]</xref>–<xref ref-type="bibr" rid="pcbi.1001083-Rinaudo1">[23]</xref>). Most of these circuits rely on transcriptional control schemes. In fact, it is well known that bacterial promoters can display logic behavior when controlled by two transcription factors <xref ref-type="bibr" rid="pcbi.1001083-Bintu1">[24]</xref>–<xref ref-type="bibr" rid="pcbi.1001083-SilvaRocha1">[26]</xref>. More complex “Boolean” promoters have been engineered, for instance, in mammalian cells <xref ref-type="bibr" rid="pcbi.1001083-Kramer1">[27]</xref>. However, the number of repressors and activators generally used in synthetic biology is low and the rational engineering of transcription factors can be a complex process <xref ref-type="bibr" rid="pcbi.1001083-Desai1">[28]</xref>.</p>
<p>Alternatively, Boolean gates are achieved in nature by mechanisms of translation control like base-pairing between antisense small-RNAs and the mRNA, or structural mRNA modifications due to the binding of chemical effectors (e.g. thiamine and tetracycline) to riboswitches and ribozymes <xref ref-type="bibr" rid="pcbi.1001083-Majdalani1">[29]</xref>, <xref ref-type="bibr" rid="pcbi.1001083-Isaacs1">[30]</xref>. These are complex RNA structures made of two modules: an <italic>aptamer</italic>, where a chemical binds, and an <italic>actuator</italic> that either undergoes structural modifications in a riboswitch or gets spliced in a ribozyme as a consequence of the chemical binding. Both riboswitches and ribozymes can either repress or activate translation <xref ref-type="bibr" rid="pcbi.1001083-Isaacs1">[30]</xref>. Furthermore, a <italic>tandem</italic> riboswitch, where a single actuator is under the control of two aptamers, has been observed in <italic>B. clausii</italic> <xref ref-type="bibr" rid="pcbi.1001083-Sudarsan1">[31]</xref>. With two distinct inputs, it represents a natural Boolean gate located on the mRNA. Taking these structures as models, similar synthetic RNA constructs have been engineered recently <xref ref-type="bibr" rid="pcbi.1001083-Serganov1">[32]</xref>. In particular, Win and Smolke <xref ref-type="bibr" rid="pcbi.1001083-Win1">[33]</xref> have built complex ribozymes that establish the most common two-input Boolean gates. Importantly, the design of small RNAs is easy compared to the design of transcription factors.</p>
<p>Despite these individual successes, synthetic biology fundamentally lacks tools and concepts for automatic computational design. Logical circuits are suitable starting points for automatic design because the target function can be defined easily by a <italic>truth table</italic>. Here, we combine approaches from electrical circuit design with our previous model for circuit design with composable parts <xref ref-type="bibr" rid="pcbi.1001083-Marchisio2">[4]</xref>, <xref ref-type="bibr" rid="pcbi.1001083-Marchisio3">[34]</xref> to develop a method for the <italic>automatic design</italic> of digital synthetic gene circuits. It is implemented as an add-on for the process modeling tool ProMoT <xref ref-type="bibr" rid="pcbi.1001083-Ginkel1">[35]</xref>, <xref ref-type="bibr" rid="pcbi.1001083-Mirschel1">[36]</xref>. The circuits use a set of standard biological parts and Boolean gates whose kinetic parameters take appropriate default values without invoking any optimization algorithms. In addition to previously developed building blocks such as two-operator-containing promoters, we consider externally controllable ribosome binding sites (RBSs). The method requires only a truth table to directly produce several possible circuit designs that process up to four different inputs to yield a unique, pre-defined output signal. Design alternatives are ranked according to a <italic>complexity score</italic> that reflects the efforts for practical implementation. Simulations on single gates and on networks of different complexity confirm the validity of our approach by highlighting accurate representation of the truth table and robustness of the designed circuits.</p>
</sec><sec id="s2">
<title>Results</title>
<sec id="s2a">
<title>A set of biological Boolean gates</title>
<p>In electrical engineering, digital circuits are organized into Boolean <italic>gates</italic> that establish basic logical operations. AND gates perform a multiplication of the input signals: they return a <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e003" xlink:type="simple"/></inline-formula> only when all inputs are high (<xref ref-type="fig" rid="pcbi-1001083-g001">Fig. 1A</xref>; see also <xref ref-type="fig" rid="pcbi-1001083-g001">Fig. 1C</xref> for a definition of symbols). Similarly, a NOT gate converts a low signal into a high one or vice-versa and YES gates produce a logical output that is identical to the input. OR gates compute the sum of (at least) two inputs; they give a <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e004" xlink:type="simple"/></inline-formula> output when at least one input is high. Complementary operations are performed by <italic>negated gates</italic>. For a NOR gate, a <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e005" xlink:type="simple"/></inline-formula> results only if all inputs are low (<xref ref-type="fig" rid="pcbi-1001083-g001">Fig. 1B</xref>), and in a NAND gate, in contrast, a <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e006" xlink:type="simple"/></inline-formula> is produced when all inputs are high. Other gates achieve more complex operations. An XOR (exclusive OR) gate, for instance, returns a <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e007" xlink:type="simple"/></inline-formula> only when all inputs are either high or low, and a <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e008" xlink:type="simple"/></inline-formula> otherwise (see <xref ref-type="supplementary-material" rid="pcbi.1001083.s006">Text S1</xref> for details).</p>
<fig id="pcbi-1001083-g001" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1001083.g001</object-id><label>Figure 1</label><caption>
<title>Biological Boolean gates.</title>
<p>The simple composition of standard biological parts permits to build Boolean gates with different numbers of inputs. (A) Configuration of a two-input AND gate. A constitutive promoter is flanked by an RBS with two hairpins, one of which coincides with a riboswitch. These mRNA structures prevent ribosomes from binding the RBS and represent the targets of two different inputs: a chemical, which binds the riboswitch, and a small RNA, which is complementary to the other hairpin. Only both inputs together remove all structural hurdles and allow translation initiation. This confers an overall AND logic function to the construct. (B) Configuration of a three-input NOR gate. The RBS contains a tandem riboswitch that, in its ground state, does not form an obstacle for ribosome binding. However, when at least one input signal (chemical) reaches the corresponding aptamer, the riboswitch changes its configuration and closes the access to the RBS. Additionally, the promoter is controlled by a repressor. Hence, RNA polymerase can start transcription only when no negative transcription factor is synthesized. Overall, this gene produces a reporter protein only when all the three inputs are absent. Thus, it performs a NOR logic operation. (C) Formal symbols of standard biological parts, pools, and Boolean gates employed throughout.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001083.g001" xlink:type="simple"/></fig>
<p>Here, we employ standard biological parts (<xref ref-type="fig" rid="pcbi-1001083-g001">Fig. 1C</xref>), namely promoters, ribosome binding sites, small RNA (sRNA), protein (transcription factor and reporter) coding regions, and terminators for the design of corresponding logical circuits. Biological Boolean gates arise from the composition of standard parts into one or more transcription units. However, logic behavior is due only to particular configurations of promoters and RBSs. For instance, the AND gate shown in <xref ref-type="fig" rid="pcbi-1001083-g001">Fig. 1A</xref> is composed of one transcriptional unit with two inputs, namely a chemical (a) and an sRNA (b) produced by a second transcriptional unit. It is the particular configuration of the RBS, where either input can activate translation of the reporter protein, that generates the desired logical behavior.</p>
<p>More generally, computational approaches for the rational design of biological Boolean gates, so far, employed either only activation and repression of promoters <xref ref-type="bibr" rid="pcbi.1001083-Rodrigo1">[7]</xref>, <xref ref-type="bibr" rid="pcbi.1001083-Dasika1">[8]</xref>, or exhibited complex structures embracing more than one single transcription unit (see <xref ref-type="bibr" rid="pcbi.1001083-Terzer1">[37]</xref> for an example). Translational regulation processes–although experimentally exploited <xref ref-type="bibr" rid="pcbi.1001083-Benenson1">[38]</xref>–have been substantially neglected. The two example gates shown in <xref ref-type="fig" rid="pcbi-1001083-g001">Fig. 1A–B</xref>, in contrast, rely on our new design for Boolean gates that combines transcriptional and translational control. Promoters are regulated by the binding of transcription factors that, in turn, are activated by chemicals. In addition, we developed mathematical models for RBSs where basic Booleans gates with one or two inputs are achieved either through the binding of chemicals to single and tandem riboswitches or via mRNA base pairing with up to two sRNAs that act as “repressors” (<italic>locks</italic>) or as “activators” (<italic>keys</italic>) <xref ref-type="bibr" rid="pcbi.1001083-Isaacs2">[39]</xref>. Following <xref ref-type="bibr" rid="pcbi.1001083-Mandal1">[40]</xref>, cooperativity between the chemical receptors (<italic>aptamers</italic>) of tandem riboswitches is reproduced and, as a novelty, mixed configurations, where one sRNA binding site is accompanied by a riboswitch, are allowed. For example, the NOR gate in <xref ref-type="fig" rid="pcbi-1001083-g001">Fig. 1B</xref> employs the coupled action of a repressor that acts on the promoter, and of two chemicals that target the RBS as in a tandem riboswitch. In our model based on full mass-action kinetics (see <xref ref-type="supplementary-material" rid="pcbi.1001083.s006">Text S1</xref>), we considered only single and tandem riboswitches <xref ref-type="bibr" rid="pcbi.1001083-Winkler1">[41]</xref>, <xref ref-type="bibr" rid="pcbi.1001083-Breaker1">[42]</xref> and neglected ribozymes or more complex synthetic constructs <xref ref-type="bibr" rid="pcbi.1001083-Bayer1">[43]</xref>, <xref ref-type="bibr" rid="pcbi.1001083-Beisel1">[44]</xref>. Note that sRNAs binding sites and riboswitches could also lie in the coding region but–without loss of generality–we neglected this possibility in our model.</p>
<p>Within this framework, one-input NOT and YES and two-input NOR and AND gates can be realized by single-input/dual-input promoters respectively, or by appropriately designed RBSs (see <xref ref-type="sec" rid="s4">Materials and Methods</xref>). Alternatively, when two inputs are present, one can be sent to the promoter and the other to the RBS. These new configurations, when the corresponding models were parametrized with literature and biologically plausible parameter values, work well in terms of reproducing the desired truth table in dynamic simulations <italic>in silico</italic> (see <xref ref-type="fig" rid="pcbi-1001083-g001">Fig. 1A,B</xref> and <xref ref-type="supplementary-material" rid="pcbi.1001083.s006">Text S1</xref>). However, they still require experimental confirmation.</p>
<p>To engineer gates with more than two inputs, we have to consider that promoter and RBS of the same transcription unit are logically connected by an AND operation. Hence, three-input NOR/AND gates can be implemented just by connecting a two input NOR/AND gate on the promoter with an inducible/repressible RBS or vice versa. <xref ref-type="fig" rid="pcbi-1001083-g001">Fig. 1B</xref> shows an example for such a NOR gate; despite its higher complexity with three inputs, the simulation results demonstrate the desired logical circuit behavior. Four-input NOR/AND gates are given by joining a promoter and an RBS both implementing a two-input NOR/AND gate. Thus, with our model based on composable parts, we can construct Boolean gates–and consequently digital circuits–regulated by up to four inputs.</p>
</sec><sec id="s2b">
<title>An electronics-based approach to circuit design</title>
<p>In electronic circuit design, the construction of larger-scale digital circuits from well-defined Boolean gates is a standard procedure, and several computational methods for this task have been developed. One of these is called the ‘Karnaugh map method’ <xref ref-type="bibr" rid="pcbi.1001083-Karnaugh1">[45]</xref>, <xref ref-type="bibr" rid="pcbi.1001083-Kuphaldt1">[46]</xref>, which we employ here for the automatic design of digital biological circuits. The algorithm starts with a truth table as the input (see <xref ref-type="fig" rid="pcbi-1001083-g002">Fig. 2</xref> for an example circuit). By re-grouping (mapping) input-output relations of the specification, it allows a conversion into a Boolean formula that is usually composed of several logical terms. More specifically, the method permits to derive two different descriptions of every digital circuit that, in electronics, are called POS (Product Of Sums) and SOP (Sum Of Products, as in the example in <xref ref-type="fig" rid="pcbi-1001083-g002">Fig. 2</xref>) forms. An exclusive OR (XOR) gate, for instance, is given in POS as <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e009" xlink:type="simple"/></inline-formula> whereas in SOP as <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e010" xlink:type="simple"/></inline-formula>, where <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e011" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e012" xlink:type="simple"/></inline-formula> are the two input signals and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e013" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e014" xlink:type="simple"/></inline-formula> are their negations.</p>
<fig id="pcbi-1001083-g002" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1001083.g002</object-id><label>Figure 2</label><caption>
<title>Conversion of a truth table into a circuit scheme via the Karnaugh map method.</title>
<p>A Karnaugh map can be considered as a particular rearrangement of a truth table. Here, three Boolean variables (<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e015" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e016" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e017" xlink:type="simple"/></inline-formula>) are taken into account. The values of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e018" xlink:type="simple"/></inline-formula> are written on the rows of the Karnaugh map, whereas the values of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e019" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e020" xlink:type="simple"/></inline-formula> lie on its columns. The Karnaugh map method permits to derive both the SOP and POS form of the Boolean expression associated with any truth table. Here, only the SOP calculation is shown (see <xref ref-type="supplementary-material" rid="pcbi.1001083.s006">Text S1</xref> for a more detailed explanation of the method). The circuit scheme follows straightforwardly: each variable that is negated in one or more clauses (<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e021" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e022" xlink:type="simple"/></inline-formula> in the example) demands a NOT gate in the input layer. Every clause corresponds to an AND gate of the internal layer. An OR gate in the final layer gathers and sums the binary outputs of the internal AND gates. In the example, chemicals, sRNAs and transcription factors regulate the three AND gates that produce a unique kind of activator able to control the final OR gate.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001083.g002" xlink:type="simple"/></fig>
<p>Both classes of Boolean formulas completely specify a circuit structure in terms of Boolean gates. Such a circuit is organized in three <italic>layers</italic>. The first layer contains a NOT gate for each negated input signal. A second layer employs as many OR/AND gates as the number of clauses in the corresponding formula–there are three clauses in our example of <xref ref-type="fig" rid="pcbi-1001083-g002">Fig. 2</xref>. The final layer uses a single AND/OR gate to gather the outputs of the gates in the previous layer. Depending on the type of gates in the second and third layer, the circuit logic is called either OR-AND (POS) or AND-OR (SOP). With <italic>De Morgan's laws</italic> <xref ref-type="bibr" rid="pcbi.1001083-Kuphaldt1">[46]</xref>, these forms can be converted into NOR-NOR and NAND-NAND logic, respectively, such that only one kind of gate is required besides the NOT in the input layer. A <italic>minimal</italic> formula involves the lowest number of gates. For the XOR gate, for instance, POS and SOP solutions are equivalent and require five gates each (see <xref ref-type="supplementary-material" rid="pcbi.1001083.s001">Fig. S1</xref>).</p>
<p>As in electronics, our digital genetic circuits are organized in three layers (<xref ref-type="fig" rid="pcbi-1001083-g002">Fig. 2</xref>). The POS representation employs the reduced NOR-NOR logic whereas for SOP only the non-reduced AND-OR logic is available. NAND gates required for SOP are not generally applicable since they cannot be built on sRNA regulation mechanisms (see <xref ref-type="sec" rid="s4">Materials and Methods</xref>). The inputs for our designed digital circuits are chemicals. We define <italic>inducers</italic> as chemicals that activate an activator protein or inhibit a riboswitch that, in its unbound state, prevents ribosome binding. This kind of small molecules promote either transcription or translation, which is necessary for the construction of both OR and AND gates (see <xref ref-type="sec" rid="s4">Materials and Methods</xref>). Hence, inducers are the input molecules for circuits in the SOP form. In addition, we call <italic>corepressors</italic> those chemicals that activate a repressor protein or provoke a structural change in a riboswitch such that it will prevent ribosome binding. Corepressors (<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e023" xlink:type="simple"/></inline-formula> logic input) set protein or sRNA synthesis to minimal values (<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e024" xlink:type="simple"/></inline-formula> logic output). For this reason, they are the natural input to NOR gates and, as a consequence, to circuits in the POS form. Overall, both types of input chemicals act directly on a RBS or indirectly (after binding a transcription factor) on a promoter.</p>
<p>In contrast to electronics, the input layer of a synthetic circuit contains YES gates in addition to NOT gates. A YES gate is a simple transcription unit that synthesizes a transcription factor when an input chemical is present. On the contrary, NOT gates can show complex configurations–made of up to three transcription units–that are required to convert an input chemical into either a protein or a small RNA (see <xref ref-type="supplementary-material" rid="pcbi.1001083.s002">Fig. S2</xref>).</p>
<p>Chemicals can act directly on the gates of the second (<italic>internal</italic>) layer because they are valid inputs for properly designed riboswitches. In POS, internal gates are either NOR or NOT; in SOP, AND or YES. All these gates are single transcription units regulated by up to four inputs. The easiest way of implementing the third (<italic>final</italic>) layer is through a single gate. It corresponds to the operation of sum (OR, in SOP) or multiplication (NOR, in POS) that connects the clauses of the Boolean formula. The logic resides in a one-operator promoter or, less preferably, in a RBS regulated by a sRNA. All internal gates produce the same regulatory factor: an activator (or a key) in SOP to reflect the OR logic as in <xref ref-type="fig" rid="pcbi-1001083-g002">Fig. 2</xref>, and a repressor (or a lock) for the NOR logic in POS.</p>
<p>This <italic>single</italic> final gate solution, which is the direct translation of a Boolean formula into a circuit scheme, is clearly minimal in terms of gene and regulatory factor number. However, we explored other possible classes of final layer schemes, termed <italic>disjoint</italic> solutions (see <xref ref-type="supplementary-material" rid="pcbi.1001083.s006">Text S1</xref> for details), in order to see if structurally more complex solutions can lead to a better circuit performance. Notice that these alternative solutions do not have a direct counterpart in electronics and do not require changes in the Karnaugh map algorithm. They are constructed by modifying the final layer of the single (basic) scheme.</p>
<p>Following the above considerations, we developed an algorithm for automatic circuits design that involves the following basic steps: (i) reading a pre-defined truth table, (ii) converting it into a Karnaugh map, (iii) deriving both POS and SOP circuit expressions, and (iv) implementing a selected solution using standard biological parts and gates (see <xref ref-type="supplementary-material" rid="pcbi.1001083.s006">Text S1</xref> for details). Note that as a consequence of the electronics-like approach, only parameter values for the gates potentially need optimization, but not the circuit structure. Our current implementation allows the construction of digital circuits with up to four different inputs. Hundreds of possible circuit schemes for a given truth table are computed in just a few seconds (see <xref ref-type="supplementary-material" rid="pcbi.1001083.s006">Text S1</xref>); we will discuss computational limitations of this approach below.</p>
</sec><sec id="s2c">
<title>Circuit design alternatives and complexity</title>
<p>The complexity of electronic circuits essentially depends only on the number of gates—which can be minimized through the Karnaugh map method. Synthetic biology, however, is distinct from electronics in two important aspects. Firstly, circuit designs for a given truth table differ both in gene number, and in the kind and the quantity of regulatory factors. Both factors affect the possibilities of achieving a practical implementation of a design. Secondly, circuit performance and robustness are not guaranteed in biology due to nonlinear interactions within a designed circuit, and as a consequence of the circuit's embedding into a host cell. Ideally, complexity and performance/robustness would be considered simultaneously in identifying the best circuit design, but performance-based evaluations require large numbers of computationally expensive circuit simulations, which quickly becomes prohibitive. Therefore, we propose the workflow for digital circuit design shown in <xref ref-type="fig" rid="pcbi-1001083-g003">Fig. 3</xref>. Initially, it filters solutions based on a complexity score that reflects the main constraints for a wet-lab implementation. Then, only the chosen solution(s) undergoes more elaborate and time-consuming analysis—and potentially detailed optimization—steps to establish reliable performance <italic>in vivo</italic>.</p>
<fig id="pcbi-1001083-g003" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1001083.g003</object-id><label>Figure 3</label><caption>
<title>Workflow for digital gene circuit design.</title>
<p>The overall procedure of constructing a digital, synthetic, gene circuit starts with the network automatic design that uses our computational tool based on the Karnaugh map method (blue boxes). A solution, normally the least complex one, undergoes other simulations to check and, if necessary, improve its performance and robustness (orange boxes). Finally, if the (optimized) solution meets the necessary requisites for a faithful reproduction of the corresponding truth table, it is implemented in the lab, otherwise another circuit solution has to be taken into account.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001083.g003" xlink:type="simple"/></fig>
<p>To derive a complexity score, it is important to consider that each gate must be controlled by unique signal carriers such as transcription factors and sRNAs to avoid cross-talk between standard parts. For instance, a repressor binding both to an internal and to the final NOR gate would make the network fail to reproduce some truth table entries. Therefore, we estimate the <italic>complexity</italic> of a circuit solution as a function of the number of the regulatory factors involved in the network. Moreover, transcription factors and sRNAs determine circuit complexity in different ways. Beyond the few transcription factors often used in synthetic biology, such as the LacI, TetR, CI repressors, and the CRP activator, engineering new efficient transcriptional regulators is generally time-consuming and difficult. In contrast, sRNAs can be synthesized more easily, such that regulation via locks and keys should be employed whenever possible.</p>
<p>With this rationale, we introduce the score:<disp-formula><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e025" xlink:type="simple"/><label>(1)</label></disp-formula>to characterize a circuit solution's implementation complexity, where <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e026" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e027" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e028" xlink:type="simple"/></inline-formula>, and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e029" xlink:type="simple"/></inline-formula> represent the total number of repressors, activators, locks and keys present in the circuit, respectively. The circuit complexity increases dramatically–following a power law–when the same type of transcription factor is used repeatedly, whereas the sRNA number weighs much less. Furthermore, solutions that are not particularly complex can exist despite a rather high number of regulatory factors, provided they are fairly equally distributed among the four available species (with a preference for the use of locks and keys). Note that for <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e030" xlink:type="simple"/></inline-formula> or <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e031" xlink:type="simple"/></inline-formula>, the corresponding term is removed from Eq. (1). We want to stress that <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e032" xlink:type="simple"/></inline-formula> does not reflect the <italic>quality</italic> of a circuit design–the score is intended to characterize its practical realizability.</p>
<p>To test the validity of this score we considered a complex four-input circuit (<xref ref-type="fig" rid="pcbi-1001083-g004">Fig. 4A</xref>). We refer to this circuit as test case A (see <xref ref-type="supplementary-material" rid="pcbi.1001083.s006">Text S1</xref> for more examples). Altogether, we obtained 48 circuit designs that are compatible with the specifications in principle. The distribution of complexity scores shows that single-gate structures are substantially less complex than the disjoint schemes (see <xref ref-type="fig" rid="pcbi-1001083-g004">Fig. 4B</xref>). Without such a score, evaluating the complexity of a circuit solution is not straightforward. For instance, <xref ref-type="fig" rid="pcbi-1001083-g004">Fig. 4C</xref> shows the least complex solution for the test case—for complicated structures such as this one, a quantification is required.</p>
<fig id="pcbi-1001083-g004" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1001083.g004</object-id><label>Figure 4</label><caption>
<title>Example circuit (test case A).</title>
<p>Test case A corresponds to the most complex Boolean formulas generated by our tool. (A) Truth table and Karnaugh map. (B) Solution distribution according to the complexity score. (C) Solution 1 scheme–the least complex one for test case A.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001083.g004" xlink:type="simple"/></fig>
<p>Next, we were interested in comparing our design alternatives with existing natural or synthetic circuits that perform identical logical signal processing. For natural circuits such as bacterial transcriptional networks, the functions in terms of a truth table are usually not sufficiently characterized to enable such a comparison. However, recently Rinaudo <italic>et al.</italic> <xref ref-type="bibr" rid="pcbi.1001083-Rinaudo1">[23]</xref> constructed Boolean gates based on RNA interference exclusively and showed their functional operation in mammalian cells. One implemented example circuit is shown in <xref ref-type="fig" rid="pcbi-1001083-g005">Fig. 5A</xref>. Note that siRNA production, which is supposed to be either activated or repressed by endogenous signals that act as circuit inputs, is not shown in the gate design explicitly. The exact number of genes required to engineer this circuit is not known, but since 5 different siRNAs were necessary for its implementation, we can attribute a complexity score <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e033" xlink:type="simple"/></inline-formula> to the configuration.</p>
<fig id="pcbi-1001083-g005" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1001083.g005</object-id><label>Figure 5</label><caption>
<title>Comparison of a RNAi-based with an automatically designed circuit.</title>
<p>The Boolean formula <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e034" xlink:type="simple"/></inline-formula> is here represented both (A) as the circuit provided by Rinaudo <italic>et al.</italic> <xref ref-type="bibr" rid="pcbi.1001083-Rinaudo1">[23]</xref> with <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e035" xlink:type="simple"/></inline-formula> different siRNAs and (B) as one of the <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e036" xlink:type="simple"/></inline-formula> solutions computed by our tool, using two activators and one sRNA. Notice that <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e037" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e038" xlink:type="simple"/></inline-formula> correspond to <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e039" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e040" xlink:type="simple"/></inline-formula>, respectively. Dashed lines indicate either protein synthesis or input signal conversion into a regulatory factor (NOT operation). For a better comparison with Rinaudo's scheme, we do not include the input layer in (B).</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001083.g005" xlink:type="simple"/></fig>
<p>With our method, we re-designed the circuit, that is, we determined all possible circuit solutions that comply with the truth table. In less than one second, our tool generated <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e041" xlink:type="simple"/></inline-formula> possible schemes. The least complex circuit (<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e042" xlink:type="simple"/></inline-formula>) is in POS and the “best” solution in SOP has a complexity score <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e043" xlink:type="simple"/></inline-formula>. Overall, we found 15 configurations with a complexity score lower than five that require only between 5 and 7 genes (including the input layer). One example circuit is shown in <xref ref-type="fig" rid="pcbi-1001083-g005">Fig. 5B</xref>—the more compact implementation of the logic functions is directly evident from comparison with <xref ref-type="fig" rid="pcbi-1001083-g005">Fig. 5A</xref>. Importantly, this circuit complexity is not out of reach for <italic>in vivo</italic> implementation and, according to our simulations (see <xref ref-type="supplementary-material" rid="pcbi.1001083.s006">Text S1</xref>) our solution would reproduce the experimental results in <xref ref-type="bibr" rid="pcbi.1001083-Rinaudo1">[23]</xref>. Hence, our tool can provide valid, alternative designs to the ones so far adopted to build digital gene circuits in the wet lab (see <xref ref-type="supplementary-material" rid="pcbi.1001083.s006">Text S1</xref> for details). By differentiating between design alternatives, the score is essential to judge potential implementability of a designed circuit.</p>
</sec><sec id="s2d">
<title>Circuit performance</title>
<p>To better understand the general relations between complexity and performance, we collected and simulated solutions in POS and SOP for test case A covering all the possible final layer structures.</p>
<p>Mainly two factors determine the performance of a logical circuit, beyond reproducing the truth table in principle: the extent to which high and low output signals can be practically distinguished, and the transient dynamics after changes in the inputs that may–for a certain time–give incorrect results (see <xref ref-type="fig" rid="pcbi-1001083-g006">Fig. 6A</xref> for an illustration of typical circuit dynamics). To address the first issue, we computed the steady state <italic>signal separation</italic> (<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e044" xlink:type="simple"/></inline-formula>). More specifically, we calculated the absolute signal separation as the difference between the minimal steady-state output for a logical <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e045" xlink:type="simple"/></inline-formula> (<italic>min1</italic>) and the maximal <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e046" xlink:type="simple"/></inline-formula> output (<italic>max0</italic>) (see <xref ref-type="fig" rid="pcbi-1001083-g006">Fig. 6A</xref>). Additionally, we considered the <italic>ratio</italic> (<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e047" xlink:type="simple"/></inline-formula>) between <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e048" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e049" xlink:type="simple"/></inline-formula> to separate between good and bad solutions (see <xref ref-type="supplementary-material" rid="pcbi.1001083.s006">Text S1</xref>).</p>
<fig id="pcbi-1001083-g006" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1001083.g006</object-id><label>Figure 6</label><caption>
<title>Circuit performance.</title>
<p>(A) The parameters used to estimate the quality of a digital circuit are reported on the plot of a generic solution (<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e050" xlink:type="simple"/></inline-formula> outputs lie between the two red lines, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e051" xlink:type="simple"/></inline-formula> outputs on the green surface). (B) Test case A solution <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e052" xlink:type="simple"/></inline-formula> simulation. Only the results of four (out of sixteen) truth table entries are shown. All the <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e053" xlink:type="simple"/></inline-formula> outputs lie between the red lines and all the <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e054" xlink:type="simple"/></inline-formula> outputs between the green ones. Every simulation consisted of two steps. First, the system reached a first steady state in the absence of chemicals (not shown). Afterwards, input signals were sent to the circuit. As a response, the network varied the reporter protein production and settled to a new steady state that describes the output (<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e055" xlink:type="simple"/></inline-formula> or <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e056" xlink:type="simple"/></inline-formula>) of the corresponding entry in the truth table. (C) Signal separation and transient for eight different solution of test case A. Transients have been rescaled with respect to the solution 1 value.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001083.g006" xlink:type="simple"/></fig>
<p>Transient dynamics in circuit states may be critical for practical performance. In switching between states (or when the circuit is initialized), high and low outputs are indistinguishable and several peaks of different heights can be generated before reaching the final plateau. When a circuit controls other processes, the height and the duration of these peeks–mainly if associated with <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e057" xlink:type="simple"/></inline-formula> outputs–may cause undesired repercussions. We defined the solution <italic>transient</italic> as the average area covered by <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e058" xlink:type="simple"/></inline-formula> outputs during the time the circuit takes to get to the steady state (settling time, see <xref ref-type="fig" rid="pcbi-1001083-g006">Fig. 6A</xref>).</p>
<p>With these metrics, we comprehensively quantified the design alternatives' performance as summarized in <xref ref-type="fig" rid="pcbi-1001083-g006">Fig. 6C</xref> for test case A. Note that for the corresponding simulations, promoter and RBS basal production rate were set to very low values (<inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e059" xlink:type="simple"/></inline-formula> of the internal gate transcription/translation rate). An example for simulation results for the least complex circuit design (solution 1) is shown in <xref ref-type="fig" rid="pcbi-1001083-g006">Fig. 6B</xref> (see <xref ref-type="supplementary-material" rid="pcbi.1001083.s006">Text S1</xref> for the other solutions). After an initial transient, the <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e060" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e061" xlink:type="simple"/></inline-formula> signals are clearly separated indicating that the circuit operates as specified by the truth table. The settling time is on the order of a few bacterial generation times, as observed for other synthetic circuits. In general, for the 8 solutions investigated in detail, the signal separation of 40–60 protein molecules (<xref ref-type="fig" rid="pcbi-1001083-g006">Fig. 6C</xref>) appears sufficient for practical detection in a biological cell. Not unexpectedly, we find a certain correlation between signal reliability and potentially harmful transients (<xref ref-type="fig" rid="pcbi-1001083-g006">Fig. 6C</xref>) with increasing circuit complexity. Overall, the simulations indicate that, for our Boolean gate design and parameter value choices, all circuits perform the intended function, but higher complexity may yield better performance. In any case, current technical limitations let us focus on the less complex <italic>single</italic> class circuit schemes in order to find circuit designs suitable for practical implementation.</p>
<p>In evaluating the performance of automatically designed circuits we employed standard parameter settings for all parts of the models, in particular, for the basic logical gates. Apparently, further optimization of the performance might be possible through adjustment of the parameters. A comparison of “standard” and optimized circuits, in addition, could allow us to estimate the relative quality of the automatic design algorithm. To assess these aspects, we focus on the least complex circuit scheme for test case A (solution 1). For instance, to obtain more reliable experimental measurements, we can aim at improving the circuit performance by enhancing the signal separation up to about <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e062" xlink:type="simple"/></inline-formula>. This corresponds to a difference between low and high output signals of approximately <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e063" xlink:type="simple"/></inline-formula> proteins in a typical bacterial cell, which is faithfully detectable by fluorescence microscopy techniques <xref ref-type="bibr" rid="pcbi.1001083-Gordon1">[47]</xref>.</p>
<p>Using sensitivity analysis, we discovered that only <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e064" xlink:type="simple"/></inline-formula> out of the <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e065" xlink:type="simple"/></inline-formula> parameters pertaining to the entire network model highly influence the circuit output signal. Since we want to obtain an amplification of the signal separation, we can try to modify only some of the eight sensitive parameters that belong to the final NOR gate. Remarkably, a <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e066" xlink:type="simple"/></inline-formula>-fold increase of the promoter strength produced a clear amplification of the high-level output, while the low-level output was maintained below <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e067" xlink:type="simple"/></inline-formula> protein copies. Moreover, the new promoter transcription rate is comparable with published data <xref ref-type="bibr" rid="pcbi.1001083-Elowitz1">[48]</xref> (see <xref ref-type="supplementary-material" rid="pcbi.1001083.s006">Text S1</xref> for details). Hence, while the automatically designed circuits may not be optimally functional, only simple changes may be needed to further improve their performance.</p>
</sec><sec id="s2e">
<title>Circuit robustness</title>
<p>The previous simulations confirmed the validity of our design method because all the alternative designs faithfully reproduced the truth table. In evaluating the performance of automatically designed circuits so far, however, we employed default parameter settings for all parts of the models. The choice of these parameter values has been made starting from published data and, where necessary, by tuning them in order to mimic Boolean gates properly. For instance, data available for riboswitches <xref ref-type="bibr" rid="pcbi.1001083-Wickiser1">[49]</xref>, <xref ref-type="bibr" rid="pcbi.1001083-Rieder1">[50]</xref> did not always fit into our model based on full mass-action kinetics. We assumed an effector-aptamer affinity close to the one of the sRNA with its mRNA target site <xref ref-type="bibr" rid="pcbi.1001083-Franch1">[51]</xref> or, without values for these interactions, we referred to the transcription factor-promoter system (for details, see <xref ref-type="supplementary-material" rid="pcbi.1001083.s006">Text S1</xref>). Thus, the models' parameter values are associated with uncertainty, and we therefore analyzed the impact of uncertainty on circuit performance.</p>
<p>First, we assessed the network robustness against overall parameter perturbations of the eight optimized solutions of test case A. Specifically, we evaluated if the signal separation remains above a (practically measurable) threshold of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e068" xlink:type="simple"/></inline-formula> protein copies after randomly modifying all <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e069" xlink:type="simple"/></inline-formula> network parameters simultaneously in a range of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e070" xlink:type="simple"/></inline-formula> of their reference values. Most of the circuits (six) turned out to be rather robust since more than <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e071" xlink:type="simple"/></inline-formula> of the corresponding simulations returned a signal separation above this threshold. Hence, uncertainties of parameter values—at least for unstructured parametric perturbations—do not seem to have a great impact on the digital behavior of our networks.</p>
<p>From experimental implementations of logical circuits, we know that transcriptional (and translational) leakage can substantially affect circuit performance <xref ref-type="bibr" rid="pcbi.1001083-Kramer1">[27]</xref>. As the assumed promoter and RBS basal production rates in our previous analysis were low enough to be negligible, we next simulated test case A solutions with increasing values for the basal transcription and translation rates. As expected, the number of solutions that properly reproduce the circuit truth table decreases by increasing either basal production (<xref ref-type="fig" rid="pcbi-1001083-g007">Fig. 7</xref>). Promoters with a leakage rate of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e072" xlink:type="simple"/></inline-formula> of the internal gate transcription rate–i.e. 10-fold higher than the initial leakage rate–did not affect the qualitative, but the quantitative performance of all <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e073" xlink:type="simple"/></inline-formula> solutions. With further increase of the leakage rate up to the <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e074" xlink:type="simple"/></inline-formula> of the reference value, <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e075" xlink:type="simple"/></inline-formula> solutions still survive. This might represent a hurdle to the <italic>in vivo</italic> implementation since promoters often have a basal rate of this order of magnitude. Hence, promoters might require several modifications before being used for digital circuit implementation. Analogous conclusions hold also for the RBS. In fact, with translation leakage at <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e076" xlink:type="simple"/></inline-formula> of the internal gate translation rate, the number of valid solutions drops immediately to <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e077" xlink:type="simple"/></inline-formula> and none of them shows digital behavior with higher basal protein production. Hence, also efficient RBSs are crucial to build reliable digital circuits. Overall, the differences in sensitivity between design alternatives can be employed for prioritizing practical circuit implementations, effectively using robustness as a screening metric.</p>
<fig id="pcbi-1001083-g007" position="float"><object-id pub-id-type="doi">10.1371/journal.pcbi.1001083.g007</object-id><label>Figure 7</label><caption>
<title>Circuit robustness.</title>
<p>Fraction of valid test case A solutions (out of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e078" xlink:type="simple"/></inline-formula>) for different promoter and RBS leakage rates. Leakage rate is expressed as a percentage of the fixed transcription/translation rate of the gates that belongs to the circuit internal gates.</p>
</caption><graphic mimetype="image" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001083.g007" xlink:type="simple"/></fig>
<p>Besides leakage, another source of signal disturbance is given by the intrinsic random fluctuations present in every biological system <xref ref-type="bibr" rid="pcbi.1001083-Samoilov1">[52]</xref>. The robustness of a circuit to intrinsic noise can be evaluated via stochastic simulations. Since such simulations are rather time consuming, we examined only the optimized version of test case A, solution 1. Remarkably, this circuit shows a high robustness to intrinsic noise; the signal separation of about <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e079" xlink:type="simple"/></inline-formula> proteins achieved in the deterministic case decreases–within a stochastic framework–only to about <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e080" xlink:type="simple"/></inline-formula> proteins at steady state (see <xref ref-type="supplementary-material" rid="pcbi.1001083.s006">Text S1</xref>). This underlines the importance of optimizing the circuit performance by an amplification of the circuit output that makes the <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e081" xlink:type="simple"/></inline-formula> signals insensitive to fluctuations of the <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e082" xlink:type="simple"/></inline-formula> signals and therefore preserves a reasonable separation between both. Overall, thus, the automatically designed circuits are remarkably resilient to model uncertainties and stochastic noise, except for factors such as transcriptional and translational leakage.</p>
</sec></sec><sec id="s3">
<title>Discussion</title>
<p>We presented a procedure for the automatic design of digital synthetic gene circuits based on standard biological parts. It borrows the Karnaugh map method from electrical engineering to translate a given truth table into a circuit scheme. Fundamentally, the design method employs a set of (models of) biological parts and Boolean gates that allow circuit composition. In our <italic>in silico</italic> implementation, circuits can have up to four different inputs (chemicals) and a single output such as a reporter protein. For each scheme, several circuit designs of different structural complexity and response quality are generated. We characterized circuit performance through output signal separation at steady state and via initial transients and found good solutions for all our simulations.</p>
<p>The main distinction of our method from other currently available computational tools for automatic circuit design is that the circuit structure is computed without the need for any optimization procedure. Optimization as employed in <xref ref-type="bibr" rid="pcbi.1001083-Rodrigo1">[7]</xref>, <xref ref-type="bibr" rid="pcbi.1001083-Dasika1">[8]</xref> generally is highly compute intensive, especially because it requires simulation of the circuit behavior for all input combinations at each evaluation of the optimization function. In addition, we developed more detailed models for translation—in contrast to the one-step representation in <xref ref-type="bibr" rid="pcbi.1001083-Rodrigo1">[7]</xref>, <xref ref-type="bibr" rid="pcbi.1001083-Dasika1">[8]</xref>. This implies that translational controls at the mRNA level can be exploited (alone or together with promoter regulation) to assemble Boolean gates. Both aspects lead to a high diversity of possible circuit designs for each truth table generated by our tool within computational times of only few seconds.</p>
<p>In terms of computational complexity, note that deriving a minimal Boolean formula from a truth table is an NP-complete problem. The traditional Karnaugh map algorithm is known to be efficient only up to <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e083" xlink:type="simple"/></inline-formula> inputs. For more complex systems with a higher number of inputs or outputs, however, logic synthesis in electronic circuit design provides by far more efficient algorithms than the Karnaugh map method <xref ref-type="bibr" rid="pcbi.1001083-Hachtel1">[53]</xref>. Here, we refrained from corresponding implementations because it was not clear <italic>a priori</italic> if the electronics approach could be transferred to biological systems, and because implementation is the main bottleneck for synthetic gene circuits; already the complexity of some of our example circuits is beyond the limits of the biological digital circuits so far implemented <italic>in vivo</italic>.</p>
<p>As another limitation, our model requires more, potentially ill-characterized or not measurable parameters to specify all the reactions taking place inside every part. However, different gates may share identical parts and inside a part, some parameters share the same value (like the five different mRNA decay rates in a composite RBS). As a consequence, the <italic>net</italic> number of parameters necessary to fully specify a circuit may drop considerably. In test case A solution 1, for instance, only <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e084" xlink:type="simple"/></inline-formula> out of <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e085" xlink:type="simple"/></inline-formula> parameters need specific assignments. Among them, interactions between transcription factors and promoters are already well-described and quantitative data are available in the literature. Bigger uncertainties characterize the translational controls we adopted in our framework; we tuned several associated parameter values to assure reasonable parts and gate performance. Hence, improvements to our riboswitch and antisense RNA descriptions are desirable, but to a certain extent the resulting digital circuits are robust to parameter perturbations and intrinsic noise. Moreover, the circuit performance can be drastically improved by acting only on parameters belonging to the final gate.</p>
<p>We want to stress that the importance of our tool lies in the rational, automatic design of complex digital circuits with three or four inputs. As previously explained, basic (two-input) gates have been found in several biological systems. We do not aim to reproduce these rather simple gates but we use them as standard bricks to construct more complex circuits whose structure cannot be designed in an ad-hoc fashion like other small synthetic gene circuits. So far, we considered only a limited number of transcription and translation controls to mimic Boolean behavior. We plan to extend our tool by other regulatory mechanisms already used for <italic>in vivo</italic> implementations of synthetic Boolean gates such as RNA interference <xref ref-type="bibr" rid="pcbi.1001083-Rinaudo1">[23]</xref>, tRNA-mRNA base-pairing <xref ref-type="bibr" rid="pcbi.1001083-Anderson2">[21]</xref>, ribozymes <xref ref-type="bibr" rid="pcbi.1001083-Win1">[33]</xref>, and antiswitches <xref ref-type="bibr" rid="pcbi.1001083-Bayer1">[43]</xref>.</p>
<p>In terms of practical implementations, even though many of the circuits designed by our tool seem still too large to be implemented <italic>in vivo</italic>, recent progress in combinatorial generation of standard components and their model-based assembly into synthetic circuits <xref ref-type="bibr" rid="pcbi.1001083-Ellis1">[54]</xref> suggests that increasingly complex networks will be feasible–and realized–in the near future. In particular, exponentially growing capacities for DNA synthesis <xref ref-type="bibr" rid="pcbi.1001083-Tian1">[55]</xref> and innovative protocols for the simultaneous cloning of multiple parts into a single vector <xref ref-type="bibr" rid="pcbi.1001083-Engler1">[56]</xref>, <xref ref-type="bibr" rid="pcbi.1001083-Gibson1">[57]</xref> substantially increase our experimental capabilities. Also original, powerful designs for RNA-based Boolean gates <xref ref-type="bibr" rid="pcbi.1001083-Win1">[33]</xref>, and new computational tools for the automated design of each category of Standard Biological Parts such as the RBS calculator <xref ref-type="bibr" rid="pcbi.1001083-Salis1">[58]</xref> will be critical factors in these developments. This will enable novel synthetic signal processing capabilities for applications as biosensors <xref ref-type="bibr" rid="pcbi.1001083-Khalil1">[15]</xref>, <xref ref-type="bibr" rid="pcbi.1001083-Anderson1">[16]</xref> and as molecular diagnostic computers <xref ref-type="bibr" rid="pcbi.1001083-Kahan1">[17]</xref>.</p>
</sec><sec id="s4" sec-type="materials|methods">
<title>Materials and Methods</title>
<sec id="s4a">
<title>Logical gates</title>
<p>Promoter-based configurations <xref ref-type="bibr" rid="pcbi.1001083-Bintu1">[24]</xref> are available for every biological gate controlled by one or two inputs: NOT and NOR gates require simple repressions; YES and AND gates simple activation (although, in our implementation, activators act always cooperatively on AND-like promoters); OR gates demand synergistic activation of transcription (by two activators), and, finally, NAND gates need cooperativity between two repressors. Simple activation and repression can be achieved also on the RBS either via sRNA base-pairing with specific target sequences or by chemical binding to a riboswitch. Hence, AND, YES, NOR, and NOT gates can entirely lie on mRNA. On the contrary, since ribosomes are not recruited by sRNAs, we cannot model OR gates on the RBS. Furthermore, NAND gates can be realized only by tandem riboswitches inhibited by the cooperative binding of two effector molecules but never via sRNA regulation that does not provide any kind of cooperativity. For details on the implementation of all gate variants in the three circuit layers we refer to the <xref ref-type="supplementary-material" rid="pcbi.1001083.s006">Text S1</xref>.</p>
</sec><sec id="s4b">
<title>Circuit design</title>
<p>We implemented the algorithm for automatic circuit design in Perl. It reads the number of input signals and the truth table of the circuit from a text file. Then, it computes and ranks all the possible circuit solutions, which are logged in a text file. To implement a specific solution, the program asks for the one to be designed. Then, all the necessary biological parts are generated and joined into gate-devices. Devices and pools are subsequently connected to each other to finalize the circuit design. We assign default values (see <xref ref-type="supplementary-material" rid="pcbi.1001083.s006">Text S1</xref>) to the kinetic parameters in order to reproduce correct Boolean behaviors. Our tool creates MDL (Model Definition Language <xref ref-type="bibr" rid="pcbi.1001083-Ginkel1">[35]</xref>) files that fully specify single parts, devices and the whole circuit. They serve as inputs for ProMoT, where the circuit can be visualized and, if needed, parameter values can be changed. Furthermore, ProMoT allows to export the circuit code into formats suitable for simulations such as Matlab (MathWorks, Nantucket/MA) and SBML <xref ref-type="bibr" rid="pcbi.1001083-Hucka1">[59]</xref>.</p>
</sec><sec id="s4c">
<title>Circuit analysis</title>
<p>Since the model of standard biological parts and pools is fully based on mass-action kinetics (see <xref ref-type="bibr" rid="pcbi.1001083-Marchisio2">[4]</xref> and <xref ref-type="supplementary-material" rid="pcbi.1001083.s006">Text S1</xref>), circuit time-dependent behavior can be simulated both through deterministic and stochastic solvers. For our deterministic simulations, we used the (slightly modified) Matlab codes generated by ProMoT: they are called by another Matlab script that permits to obtain all the entries of a truth table within a single run. The Matlab files for test case A (solution 1) are provided as <xref ref-type="supplementary-material" rid="pcbi.1001083.s003">Protocols S1</xref>, <xref ref-type="supplementary-material" rid="pcbi.1001083.s004">S2</xref>. We performed our stochastic simulations with COPASI <xref ref-type="bibr" rid="pcbi.1001083-Hoops1">[60]</xref> that contains an implementation of the Gibson-Bruck algorithm <xref ref-type="bibr" rid="pcbi.1001083-Gibson2">[61]</xref>. The SBML file (level 2, version 1) for test case A (solution 1) is provided as <xref ref-type="supplementary-material" rid="pcbi.1001083.s005">Protocol S3</xref>.</p>
<p>Sensitivity analysis and kinetic parameter value optimization were performed in Matlab. In particular, we calculated the normalized sensitivity values of the circuit output (fluorescent protein concentration) with respect to all the circuit kinetic parameters at steady state conditions.</p>
<p>As for the parameter optimization, we used the “gaSB” function (standard genetic algorithm with elitism <xref ref-type="bibr" rid="pcbi.1001083-Streichert1">[62]</xref>) and the “Manual Tuning” option of the SBPD extension package for the SBtoolbox2 <xref ref-type="bibr" rid="pcbi.1001083-Schmidt1">[63]</xref> for Matlab (version 7.8).</p>
</sec></sec><sec id="s5">
<title>Supporting Information</title>
<supplementary-material id="pcbi.1001083.s001" mimetype="image/tiff" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001083.s001" xlink:type="simple"><label>Figure S1</label><caption>
<p>Different three-layer implementations of an XOR gate in electronics. (A) SOP representation: AND-OR and NAND-NAND logic. (B) POS representation: OR-AND and NOR-NOR logic. In both cases, one logic can be derived from the other one through De Morgan's laws: <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e086" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic mimetype="image" xlink:href="info:doi/10.1371/journal.pcbi.1001083.e087" xlink:type="simple"/></inline-formula>.</p>
<p>(0.21 MB TIF)</p>
</caption></supplementary-material><supplementary-material id="pcbi.1001083.s002" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001083.s002" xlink:type="simple"><label>Figure S2</label><caption>
<p>Schemes of YES (A) and NOT (B,C) input gates both in SOP and POS representation. Notice that the standard biological part (promoter or RBS) where the gate output acts is shown at the bottom-right corner of each gate.</p>
<p>(0.05 MB PDF)</p>
</caption></supplementary-material><supplementary-material id="pcbi.1001083.s003" mimetype="text/plain" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001083.s003" xlink:type="simple"><label>Protocol S1</label><caption>
<p>Matlab file - test case A, solution 1.</p>
<p>(0.18 MB TXT)</p>
</caption></supplementary-material><supplementary-material id="pcbi.1001083.s004" mimetype="text/plain" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001083.s004" xlink:type="simple"><label>Protocol S2</label><caption>
<p>Matlab file - test case A, solution 1 simulation.</p>
<p>(0.00 MB TXT)</p>
</caption></supplementary-material><supplementary-material id="pcbi.1001083.s005" mimetype="text/xml" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001083.s005" xlink:type="simple"><label>Protocol S3</label><caption>
<p>SBML file - test case A, solution 1.</p>
<p>(0.45 MB XML)</p>
</caption></supplementary-material><supplementary-material id="pcbi.1001083.s006" mimetype="application/pdf" position="float" xlink:href="info:doi/10.1371/journal.pcbi.1001083.s006" xlink:type="simple"><label>Text S1</label><caption>
<p>Automatic design of digital synthetic gene circuits. Additional background, methods, and results.</p>
<p>(2.77 MB PDF)</p>
</caption></supplementary-material></sec></body>
<back>
<ack>
<p>We thank the colleagues of the Computational Systems Biology Group - ETH Zurich, Michael Rempel, and Henning Schmidt for helpful suggestions and discussions.</p>
</ack>
<ref-list>
<title>References</title>
<ref id="pcbi.1001083-Endy1"><label>1</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Endy</surname><given-names>D</given-names></name>
</person-group>             <year>2005</year>             <article-title>Foundations for engineering biology.</article-title>             <source>Nature</source>             <volume>438</volume>             <fpage>449</fpage>             <lpage>453</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Marchisio1"><label>2</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Marchisio</surname><given-names>MA</given-names></name>
<name name-style="western"><surname>Stelling</surname><given-names>J</given-names></name>
</person-group>             <year>2009</year>             <article-title>Computational design tools for synthetic biology.</article-title>             <source>Curr Opin Biotechnol</source>             <volume>20</volume>             <fpage>479</fpage>             <lpage>485</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Goler1"><label>3</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Goler</surname><given-names>JA</given-names></name>
</person-group>             <year>2004</year>             <article-title>BioJADE: A Design and Simulation Tool for Synthetic Biological Systems.</article-title>             <comment>Technical report, MIT, Cambridge, MA</comment>          </element-citation></ref>
<ref id="pcbi.1001083-Marchisio2"><label>4</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Marchisio</surname><given-names>MA</given-names></name>
<name name-style="western"><surname>Stelling</surname><given-names>J</given-names></name>
</person-group>             <year>2008</year>             <article-title>Computational design of synthetic gene circuits with composable parts.</article-title>             <source>Bioinformatics</source>             <volume>24</volume>             <fpage>1903</fpage>             <lpage>1910</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Chandran1"><label>5</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Chandran</surname><given-names>D</given-names></name>
<name name-style="western"><surname>Bergmann</surname><given-names>FT</given-names></name>
<name name-style="western"><surname>Sauro</surname><given-names>HM</given-names></name>
</person-group>             <year>2009</year>             <article-title>Tinkercell: modular cad tool for synthetic biology.</article-title>             <source>J Biol Eng</source>             <volume>3</volume>             <fpage>19</fpage>          </element-citation></ref>
<ref id="pcbi.1001083-Franois1"><label>6</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>François</surname><given-names>P</given-names></name>
<name name-style="western"><surname>Hakim</surname><given-names>V</given-names></name>
</person-group>             <year>2004</year>             <article-title>Design of genetic networks with specified functions by evolution in silico.</article-title>             <source>Proc Natl Acad Sci U S A</source>             <volume>101</volume>             <fpage>580</fpage>             <lpage>585</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Rodrigo1"><label>7</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Rodrigo</surname><given-names>G</given-names></name>
<name name-style="western"><surname>Carrera</surname><given-names>J</given-names></name>
<name name-style="western"><surname>Jaramillo</surname><given-names>A</given-names></name>
</person-group>             <year>2007</year>             <article-title>Genetdes: automatic design of transcriptional networks.</article-title>             <source>Bioinformatics</source>             <volume>23</volume>             <fpage>1857</fpage>             <lpage>1858</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Dasika1"><label>8</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Dasika</surname><given-names>MS</given-names></name>
<name name-style="western"><surname>Maranas</surname><given-names>CD</given-names></name>
</person-group>             <year>2008</year>             <article-title>Optcircuit: an optimization based method for computational design of genetic circuits.</article-title>             <source>BMC Syst Biol</source>             <volume>2</volume>             <fpage>24</fpage>          </element-citation></ref>
<ref id="pcbi.1001083-Mangan1"><label>9</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Mangan</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Zaslaver</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Alon</surname><given-names>U</given-names></name>
</person-group>             <year>2003</year>             <article-title>The coherent feedforward loop serves as a sign-sensitive delay element in transcription networks.</article-title>             <source>J Mol Biol</source>             <volume>334</volume>             <fpage>197</fpage>             <lpage>204</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Kalir1"><label>10</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Kalir</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Mangan</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Alon</surname><given-names>U</given-names></name>
</person-group>             <year>2005</year>             <article-title>A coherent feed-forward loop with a sum input function prolongs flagella expression in escherichia coli.</article-title>             <source>Mol Syst Biol</source>             <volume>1</volume>             <fpage>2005.0006</fpage>          </element-citation></ref>
<ref id="pcbi.1001083-Mangan2"><label>11</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Mangan</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Itzkovitz</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Zaslaver</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Alon</surname><given-names>U</given-names></name>
</person-group>             <year>2006</year>             <article-title>The incoherent feed-forward loop accelerates the response-time of the gal system of escherichia coli.</article-title>             <source>J Mol Biol</source>             <volume>356</volume>             <fpage>1073</fpage>             <lpage>1081</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Eichenberger1"><label>12</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Eichenberger</surname><given-names>P</given-names></name>
<name name-style="western"><surname>Fujita</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Jensen</surname><given-names>ST</given-names></name>
<name name-style="western"><surname>Conlon</surname><given-names>EM</given-names></name>
<name name-style="western"><surname>Rudner</surname><given-names>DZ</given-names></name>
<etal/></person-group>             <year>2004</year>             <article-title>The program of gene transcription for a single differentiating cell type during sporulation in bacillus subtilis.</article-title>             <source>PLoS Biol</source>             <volume>2</volume>             <fpage>e328</fpage>          </element-citation></ref>
<ref id="pcbi.1001083-Kashtan1"><label>13</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Kashtan</surname><given-names>N</given-names></name>
<name name-style="western"><surname>Itzkovitz</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Milo</surname><given-names>R</given-names></name>
<name name-style="western"><surname>Alon</surname><given-names>U</given-names></name>
</person-group>             <year>2004</year>             <article-title>Topological generalizations of network motifs.</article-title>             <source>Phys Rev E Stat Nonlin Soft Matter Phys</source>             <volume>70</volume>             <fpage>031909</fpage>          </element-citation></ref>
<ref id="pcbi.1001083-Alon1"><label>14</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Alon</surname><given-names>U</given-names></name>
</person-group>             <year>2006</year>             <source>An Introduction to Systems Biology</source>             <publisher-loc>Boca Raton, FL, USA</publisher-loc>             <publisher-name>Chapman &amp; Hall/CRC Press</publisher-name> <!--===== Restructure page-count as size[@units="page"] =====--><size units="page">301</size>           </element-citation></ref>
<ref id="pcbi.1001083-Khalil1"><label>15</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Khalil</surname><given-names>AS</given-names></name>
<name name-style="western"><surname>Collins</surname><given-names>JJ</given-names></name>
</person-group>             <year>2010</year>             <article-title>Synthetic biology: applications come of age.</article-title>             <source>Nat Rev Genet</source>             <volume>11</volume>             <fpage>367</fpage>             <lpage>379</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Anderson1"><label>16</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Anderson</surname><given-names>JC</given-names></name>
<name name-style="western"><surname>Clarke</surname><given-names>EJ</given-names></name>
<name name-style="western"><surname>Arkin</surname><given-names>AP</given-names></name>
<name name-style="western"><surname>Voigt</surname><given-names>CA</given-names></name>
</person-group>             <year>2006</year>             <article-title>Environmentally controlled invasion of cancer cells by engineered bacteria.</article-title>             <source>J Mol Biol</source>             <volume>355</volume>             <fpage>619</fpage>             <lpage>627</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Kahan1"><label>17</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Kahan</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Gil</surname><given-names>B</given-names></name>
<name name-style="western"><surname>Adar</surname><given-names>R</given-names></name>
<name name-style="western"><surname>Shapiro</surname><given-names>E</given-names></name>
</person-group>             <year>2008</year>             <article-title>Towards molecular computers that operate in a biological environment.</article-title>             <source>Phisica D</source>             <volume>237</volume>             <fpage>1165</fpage>             <lpage>1172</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Weiss1"><label>18</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Weiss</surname><given-names>R</given-names></name>
<name name-style="western"><surname>Basu</surname><given-names>S</given-names></name>
</person-group>             <year>2002</year>             <article-title>The device physics of cellular logic gates.</article-title>             <fpage>54</fpage>             <lpage>61</lpage>             <comment>In: Proceedings of NSC-1: The First Workshop on Non-Silicon Computing; 3 February 2002; Cambridge, MA, USA</comment>          </element-citation></ref>
<ref id="pcbi.1001083-Stojanovic1"><label>19</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Stojanovic</surname><given-names>MN</given-names></name>
<name name-style="western"><surname>Stefanovic</surname><given-names>D</given-names></name>
</person-group>             <year>2003</year>             <article-title>A deoxyribozyme-based molecular automaton.</article-title>             <source>Nat Biotechnol</source>             <volume>21</volume>             <fpage>1069</fpage>             <lpage>1074</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Seelig1"><label>20</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Seelig</surname><given-names>G</given-names></name>
<name name-style="western"><surname>Soloveichik</surname><given-names>D</given-names></name>
<name name-style="western"><surname>Zhang</surname><given-names>DY</given-names></name>
<name name-style="western"><surname>Winfree</surname><given-names>E</given-names></name>
</person-group>             <year>2006</year>             <article-title>Enzyme-free nucleic acid logic circuits.</article-title>             <source>Science</source>             <volume>314</volume>             <fpage>1585</fpage>             <lpage>1588</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Anderson2"><label>21</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Anderson</surname><given-names>JC</given-names></name>
<name name-style="western"><surname>Voigt</surname><given-names>CA</given-names></name>
<name name-style="western"><surname>Arkin</surname><given-names>AP</given-names></name>
</person-group>             <year>2007</year>             <article-title>Environmental signal integration by a modular and gate.</article-title>             <source>Mol Syst Biol</source>             <volume>3</volume>             <fpage>133</fpage>          </element-citation></ref>
<ref id="pcbi.1001083-Frezza1"><label>22</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Frezza</surname><given-names>BM</given-names></name>
<name name-style="western"><surname>Cockroft</surname><given-names>SL</given-names></name>
<name name-style="western"><surname>Ghadiri</surname><given-names>MR</given-names></name>
</person-group>             <year>2007</year>             <article-title>Modular multi-level circuits from immobilized dna-based logic gates.</article-title>             <source>J Am Chem Soc</source>             <volume>129</volume>             <fpage>14875</fpage>             <lpage>14879</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Rinaudo1"><label>23</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Rinaudo</surname><given-names>K</given-names></name>
<name name-style="western"><surname>Bleris</surname><given-names>L</given-names></name>
<name name-style="western"><surname>Maddamsetti</surname><given-names>R</given-names></name>
<name name-style="western"><surname>Subramanian</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Weiss</surname><given-names>R</given-names></name>
<etal/></person-group>             <year>2007</year>             <article-title>A universal rnai-based logic evaluator that operates in mammalian cells.</article-title>             <source>Nat Biotechnol</source>             <volume>25</volume>             <fpage>795</fpage>             <lpage>801</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Bintu1"><label>24</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Bintu</surname><given-names>L</given-names></name>
<name name-style="western"><surname>Buchler</surname><given-names>NE</given-names></name>
<name name-style="western"><surname>Garcia</surname><given-names>HG</given-names></name>
<name name-style="western"><surname>Gerland</surname><given-names>U</given-names></name>
<name name-style="western"><surname>Hwa</surname><given-names>T</given-names></name>
<etal/></person-group>             <year>2005</year>             <article-title>Transcriptional regulation by the numbers: applications.</article-title>             <source>Curr Opin Genet Dev</source>             <volume>15</volume>             <fpage>125</fpage>             <lpage>135</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Bintu2"><label>25</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Bintu</surname><given-names>L</given-names></name>
<name name-style="western"><surname>Buchler</surname><given-names>NE</given-names></name>
<name name-style="western"><surname>Garcia</surname><given-names>HG</given-names></name>
<name name-style="western"><surname>Gerland</surname><given-names>U</given-names></name>
<name name-style="western"><surname>Hwa</surname><given-names>T</given-names></name>
<etal/></person-group>             <year>2005</year>             <article-title>Transcriptional regulation by the numbers: models.</article-title>             <source>Curr Opin Genet Dev</source>             <volume>15</volume>             <fpage>116</fpage>             <lpage>124</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-SilvaRocha1"><label>26</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Silva-Rocha</surname><given-names>R</given-names></name>
<name name-style="western"><surname>de Lorenzo</surname><given-names>V</given-names></name>
</person-group>             <year>2008</year>             <article-title>Mining logic gates in prokaryotic transcriptional regulation networks.</article-title>             <source>FEBS Lett</source>             <volume>582</volume>             <fpage>1237</fpage>             <lpage>1244</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Kramer1"><label>27</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Kramer</surname><given-names>BP</given-names></name>
<name name-style="western"><surname>Fischer</surname><given-names>C</given-names></name>
<name name-style="western"><surname>Fussenegger</surname><given-names>M</given-names></name>
</person-group>             <year>2004</year>             <article-title>Biologic gates enable logical transcription control in mammalian cells.</article-title>             <source>Biotechnol Bioeng</source>             <volume>87</volume>             <fpage>478</fpage>             <lpage>484</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Desai1"><label>28</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Desai</surname><given-names>TA</given-names></name>
<name name-style="western"><surname>Rodionov</surname><given-names>DA</given-names></name>
<name name-style="western"><surname>Gelfand</surname><given-names>MS</given-names></name>
<name name-style="western"><surname>Alm</surname><given-names>EJ</given-names></name>
<name name-style="western"><surname>Rao</surname><given-names>CV</given-names></name>
</person-group>             <year>2009</year>             <article-title>Engineering transcription factors with novel dna-binding specificity using comparative genomics.</article-title>             <source>Nucleic Acids Res</source>             <volume>37</volume>             <fpage>2493</fpage>             <lpage>2503</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Majdalani1"><label>29</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Majdalani</surname><given-names>N</given-names></name>
<name name-style="western"><surname>Vanderpool</surname><given-names>CK</given-names></name>
<name name-style="western"><surname>Gottesman</surname><given-names>S</given-names></name>
</person-group>             <year>2005</year>             <article-title>Bacterial small rna regulators.</article-title>             <source>Crit Rev Biochem Mol Biol</source>             <volume>40</volume>             <fpage>93</fpage>             <lpage>113</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Isaacs1"><label>30</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Isaacs</surname><given-names>FJ</given-names></name>
<name name-style="western"><surname>Dwyer</surname><given-names>DJ</given-names></name>
<name name-style="western"><surname>Collins</surname><given-names>JJ</given-names></name>
</person-group>             <year>2006</year>             <article-title>RNA synthetic biology.</article-title>             <source>Nat Biotechnol</source>             <volume>24</volume>             <fpage>545</fpage>             <lpage>554</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Sudarsan1"><label>31</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Sudarsan</surname><given-names>N</given-names></name>
<name name-style="western"><surname>Hammond</surname><given-names>MC</given-names></name>
<name name-style="western"><surname>Block</surname><given-names>KF</given-names></name>
<name name-style="western"><surname>Welz</surname><given-names>R</given-names></name>
<name name-style="western"><surname>Barrick</surname><given-names>JE</given-names></name>
<etal/></person-group>             <year>2006</year>             <article-title>Tandem riboswitch architectures exhibit complex gene control functions.</article-title>             <source>Science</source>             <volume>314</volume>             <fpage>300</fpage>             <lpage>304</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Serganov1"><label>32</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Serganov</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Patel</surname><given-names>DJ</given-names></name>
</person-group>             <year>2007</year>             <article-title>Ribozymes, riboswitches and beyond: regulation of gene expression without proteins.</article-title>             <source>Nat Rev Genet</source>             <volume>8</volume>             <fpage>776</fpage>             <lpage>790</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Win1"><label>33</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Win</surname><given-names>MN</given-names></name>
<name name-style="western"><surname>Smolke</surname><given-names>CD</given-names></name>
</person-group>             <year>2008</year>             <article-title>Higher-order cellular information processing with synthetic rna devices.</article-title>             <source>Science</source>             <volume>322</volume>             <fpage>456</fpage>             <lpage>460</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Marchisio3"><label>34</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Marchisio</surname><given-names>MA</given-names></name>
<name name-style="western"><surname>Stelling</surname><given-names>J</given-names></name>
</person-group>             <year>2009</year>             <article-title>Synthetic gene network computational design.</article-title>             <fpage>309</fpage>             <lpage>312</lpage>             <comment>In: Proceedings of the IEEE International Symposium on Circuits and Systems, ISCAS 2009; 24–27 May 2009; Taipei, Taiwan</comment>          </element-citation></ref>
<ref id="pcbi.1001083-Ginkel1"><label>35</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Ginkel</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Kremling</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Nutsch</surname><given-names>T</given-names></name>
<name name-style="western"><surname>Rehner</surname><given-names>R</given-names></name>
<name name-style="western"><surname>Gilles</surname><given-names>ED</given-names></name>
</person-group>             <year>2003</year>             <article-title>Modular modeling of cellular systems with ProMoT/Diva.</article-title>             <source>Bioinformatics</source>             <volume>19</volume>             <fpage>1169</fpage>             <lpage>1176</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Mirschel1"><label>36</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Mirschel</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Steinmetz</surname><given-names>K</given-names></name>
<name name-style="western"><surname>Rempel</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Ginkel</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Gilles</surname><given-names>ED</given-names></name>
</person-group>             <year>2009</year>             <article-title>Promot: modular modeling for systems biology.</article-title>             <source>Bioinformatics</source>             <volume>25</volume>             <fpage>687</fpage>             <lpage>689</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Terzer1"><label>37</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Terzer</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Jovanovic</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Choutko</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Nikolayeva</surname><given-names>O</given-names></name>
<name name-style="western"><surname>Korn</surname><given-names>A</given-names></name>
<etal/></person-group>             <year>2007</year>             <article-title>Design of a biological half adder.</article-title>             <source>IET Synthetic Biology</source>             <volume>1</volume>             <fpage>53</fpage>             <lpage>58</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Benenson1"><label>38</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Benenson</surname><given-names>Y</given-names></name>
</person-group>             <year>2009</year>             <article-title>Rna-based computation in live cells.</article-title>             <source>Curr Opin Biotechnol</source>             <volume>20</volume>             <fpage>471</fpage>             <lpage>478</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Isaacs2"><label>39</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Isaacs</surname><given-names>FJ</given-names></name>
<name name-style="western"><surname>Dwyer</surname><given-names>DJ</given-names></name>
<name name-style="western"><surname>Ding</surname><given-names>C</given-names></name>
<name name-style="western"><surname>Pervouchine</surname><given-names>DD</given-names></name>
<name name-style="western"><surname>Cantor</surname><given-names>CR</given-names></name>
<etal/></person-group>             <year>2004</year>             <article-title>Engineered riboregulators enable post-transcriptional control of gene expression.</article-title>             <source>Nat Biotechnol</source>             <volume>22</volume>             <fpage>841</fpage>             <lpage>847</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Mandal1"><label>40</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Mandal</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Lee</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Barrick</surname><given-names>JE</given-names></name>
<name name-style="western"><surname>Weinberg</surname><given-names>Z</given-names></name>
<name name-style="western"><surname>Emilsson</surname><given-names>GM</given-names></name>
<etal/></person-group>             <year>2004</year>             <article-title>A glycine-dependent riboswitch that uses cooperative binding to control gene expression.</article-title>             <source>Science</source>             <volume>306</volume>             <fpage>275</fpage>             <lpage>279</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Winkler1"><label>41</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Winkler</surname><given-names>W</given-names></name>
<name name-style="western"><surname>Nahvi</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Breaker</surname><given-names>RR</given-names></name>
</person-group>             <year>2002</year>             <article-title>Thiamine derivatives bind messenger rnas directly to regulate bacterial gene expression.</article-title>             <source>Nature</source>             <volume>419</volume>             <fpage>952</fpage>             <lpage>956</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Breaker1"><label>42</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Breaker</surname><given-names>RR</given-names></name>
</person-group>             <year>2008</year>             <article-title>Complex riboswitches.</article-title>             <source>Science</source>             <volume>319</volume>             <fpage>1795</fpage>             <lpage>1797</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Bayer1"><label>43</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Bayer</surname><given-names>TS</given-names></name>
<name name-style="western"><surname>Smolke</surname><given-names>CD</given-names></name>
</person-group>             <year>2005</year>             <article-title>Programmable ligand-controlled riboregulators of eukaryotic gene expression.</article-title>             <source>Nat Biotechnol</source>             <volume>23</volume>             <fpage>337</fpage>             <lpage>343</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Beisel1"><label>44</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Beisel</surname><given-names>CL</given-names></name>
<name name-style="western"><surname>Smolke</surname><given-names>CD</given-names></name>
</person-group>             <year>2009</year>             <article-title>Design principles for riboswitch function.</article-title>             <source>PLoS Comput Biol</source>             <volume>5</volume>             <fpage>e1000363</fpage>          </element-citation></ref>
<ref id="pcbi.1001083-Karnaugh1"><label>45</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Karnaugh</surname><given-names>M</given-names></name>
</person-group>             <year>1953</year>             <article-title>The map method for synthesis of combinational logic circuits.</article-title>             <source>Transactions of the American Institute of Electrical Engineers</source>             <volume>72</volume>             <issue>9</issue>             <fpage>593</fpage>             <lpage>599</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Kuphaldt1"><label>46</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Kuphaldt</surname><given-names>TR</given-names></name>
</person-group>             <year>2007</year>             <article-title>Lessons In Electric Circuits (Volume IV-Digital).</article-title>             <comment>Available: <ext-link ext-link-type="uri" xlink:href="http://www.ibiblio.org/obp/electricCircuits" xlink:type="simple">http://www.ibiblio.org/obp/electricCircuits</ext-link></comment>          </element-citation></ref>
<ref id="pcbi.1001083-Gordon1"><label>47</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Gordon</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Colman-Lerner</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Chin</surname><given-names>TE</given-names></name>
<name name-style="western"><surname>Benjamin</surname><given-names>KR</given-names></name>
<name name-style="western"><surname>Yu</surname><given-names>RC</given-names></name>
<etal/></person-group>             <year>2007</year>             <article-title>Single-cell quantification of molecules and rates using open-source microscope-based cytometry.</article-title>             <source>Nat Methods</source>             <volume>4</volume>             <fpage>175</fpage>             <lpage>181</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Elowitz1"><label>48</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Elowitz</surname><given-names>MB</given-names></name>
<name name-style="western"><surname>Leibler</surname><given-names>S</given-names></name>
</person-group>             <year>2000</year>             <article-title>A synthetic oscillatory network of transcriptional regulators.</article-title>             <source>Nature</source>             <volume>403</volume>             <fpage>335</fpage>             <lpage>338</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Wickiser1"><label>49</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Wickiser</surname><given-names>JK</given-names></name>
<name name-style="western"><surname>Cheah</surname><given-names>MT</given-names></name>
<name name-style="western"><surname>Breaker</surname><given-names>RR</given-names></name>
<name name-style="western"><surname>Crothers</surname><given-names>DM</given-names></name>
</person-group>             <year>2005</year>             <article-title>The kinetics of ligand binding by an adenine-sensing riboswitch.</article-title>             <source>Biochemistry</source>             <volume>44</volume>             <fpage>13404</fpage>             <lpage>13414</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Rieder1"><label>50</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Rieder</surname><given-names>R</given-names></name>
<name name-style="western"><surname>Lang</surname><given-names>K</given-names></name>
<name name-style="western"><surname>Graber</surname><given-names>D</given-names></name>
<name name-style="western"><surname>Micura</surname><given-names>R</given-names></name>
</person-group>             <year>2007</year>             <article-title>Ligand-induced folding of the adenosine deaminase a-riboswitch and implications on riboswitch translational control.</article-title>             <source>Chembiochem</source>             <volume>8</volume>             <fpage>896</fpage>             <lpage>902</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Franch1"><label>51</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Franch</surname><given-names>T</given-names></name>
<name name-style="western"><surname>Petersen</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Wagner</surname><given-names>EG</given-names></name>
<name name-style="western"><surname>Jacobsen</surname><given-names>JP</given-names></name>
<name name-style="western"><surname>Gerdes</surname><given-names>K</given-names></name>
</person-group>             <year>1999</year>             <article-title>Antisense RNA regulation in prokaryotes: rapid RNA/RNA interaction facilitated by a general U-turn loop structure.</article-title>             <source>J Mol Biol</source>             <volume>294</volume>             <fpage>1115</fpage>             <lpage>1125</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Samoilov1"><label>52</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Samoilov</surname><given-names>MS</given-names></name>
<name name-style="western"><surname>Arkin</surname><given-names>AP</given-names></name>
</person-group>             <year>2006</year>             <article-title>Deviant effects in molecular reaction pathways.</article-title>             <source>Nat Biotechnol</source>             <volume>24</volume>             <fpage>1235</fpage>             <lpage>1240</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Hachtel1"><label>53</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Hachtel</surname><given-names>GD</given-names></name>
<name name-style="western"><surname>Somenzi</surname><given-names>F</given-names></name>
</person-group>             <year>2006</year>             <source>Logic Synthesis and Verification Algorithms</source>             <publisher-loc>Secaucus, NJ, USA</publisher-loc>             <publisher-name>Springer-Verlag New York, Inc</publisher-name> <!--===== Restructure page-count as size[@units="page"] =====--><size units="page">600</size>           </element-citation></ref>
<ref id="pcbi.1001083-Ellis1"><label>54</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Ellis</surname><given-names>T</given-names></name>
<name name-style="western"><surname>Wang</surname><given-names>X</given-names></name>
<name name-style="western"><surname>Collins</surname><given-names>JJ</given-names></name>
</person-group>             <year>2009</year>             <article-title>Diversity-based, model-guided construction of synthetic gene networks with predicted functions.</article-title>             <source>Nat Biotechnol</source>             <volume>27</volume>             <fpage>465</fpage>             <lpage>471</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Tian1"><label>55</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Tian</surname><given-names>J</given-names></name>
<name name-style="western"><surname>Ma</surname><given-names>K</given-names></name>
<name name-style="western"><surname>Saaem</surname><given-names>I</given-names></name>
</person-group>             <year>2009</year>             <article-title>Advancing high-throughput gene synthesis technology.</article-title>             <source>Mol Biosyst</source>             <volume>5</volume>             <fpage>714</fpage>             <lpage>722</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Engler1"><label>56</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Engler</surname><given-names>C</given-names></name>
<name name-style="western"><surname>Gruetzner</surname><given-names>R</given-names></name>
<name name-style="western"><surname>Kandzia</surname><given-names>R</given-names></name>
<name name-style="western"><surname>Marillonnet</surname><given-names>S</given-names></name>
</person-group>             <year>2009</year>             <article-title>Golden gate shuffling: a one-pot dna shuffling method based on type iis restriction enzymes.</article-title>             <source>PLoS One</source>             <volume>4</volume>             <fpage>e5553</fpage>          </element-citation></ref>
<ref id="pcbi.1001083-Gibson1"><label>57</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Gibson</surname><given-names>DG</given-names></name>
<name name-style="western"><surname>Young</surname><given-names>L</given-names></name>
<name name-style="western"><surname>Chuang</surname><given-names>RY</given-names></name>
<name name-style="western"><surname>Venter</surname><given-names>JC</given-names></name>
<name name-style="western"><surname>Hutchison</surname><given-names>CA</given-names></name>
<etal/></person-group>             <year>2009</year>             <article-title>Enzymatic assembly of dna molecules up to several hundred kilobases.</article-title>             <source>Nat Methods</source>             <volume>6</volume>             <fpage>343</fpage>             <lpage>345</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Salis1"><label>58</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Salis</surname><given-names>HM</given-names></name>
<name name-style="western"><surname>Mirsky</surname><given-names>EA</given-names></name>
<name name-style="western"><surname>Voigt</surname><given-names>CA</given-names></name>
</person-group>             <year>2009</year>             <article-title>Automated design of synthetic ribosome binding sites to control protein expression.</article-title>             <source>Nat Biotechnol</source>             <volume>27</volume>             <fpage>946</fpage>             <lpage>950</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Hucka1"><label>59</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Hucka</surname><given-names>M</given-names></name>
<name name-style="western"><surname>Finney</surname><given-names>A</given-names></name>
<name name-style="western"><surname>Sauro</surname><given-names>H</given-names></name>
<name name-style="western"><surname>Bolouri</surname><given-names>H</given-names></name>
<name name-style="western"><surname>Doyle</surname><given-names>J</given-names></name>
<etal/></person-group>             <year>2003</year>             <article-title>The systems biology markup language (SBML): a medium for representation and exchange of biochemical network models.</article-title>             <source>Bioinformatics</source>             <volume>19</volume>             <fpage>524</fpage>             <lpage>531</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Hoops1"><label>60</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Hoops</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Sahle</surname><given-names>S</given-names></name>
<name name-style="western"><surname>Gauges</surname><given-names>R</given-names></name>
<name name-style="western"><surname>Lee</surname><given-names>C</given-names></name>
<name name-style="western"><surname>Pahle</surname><given-names>J</given-names></name>
<etal/></person-group>             <year>2006</year>             <article-title>COPASI–a COmplex PAthway SImulator.</article-title>             <source>Bioinformatics</source>             <volume>22</volume>             <fpage>3067</fpage>             <lpage>3074</lpage>          </element-citation></ref>
<ref id="pcbi.1001083-Gibson2"><label>61</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Gibson</surname><given-names>MA</given-names></name>
<name name-style="western"><surname>Bruck</surname><given-names>J</given-names></name>
</person-group>             <year>1999</year>             <article-title>Efficient Exact Stochastic Simulation of Chemical Systems with Many Species and Many Channels.</article-title>             <comment>Caltech Parallel and Distributed Group technical report 026, Caltech, Pasadena, CA, USA</comment>          </element-citation></ref>
<ref id="pcbi.1001083-Streichert1"><label>62</label><element-citation publication-type="other" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Streichert</surname><given-names>F</given-names></name>
<name name-style="western"><surname>Ulmer</surname><given-names>H</given-names></name>
</person-group>             <year>2005</year>             <article-title>Javaeva: A java based framework for evolutionary algorithms.</article-title>             <comment>Technical Report WSI-2005-06, Wilhelm-Schickard-Institut für Informatik (WSI), Centre for Bioinformatics Tübingen (ZBIT), Eberhard-Karls-University Tübingen, Germany</comment>          </element-citation></ref>
<ref id="pcbi.1001083-Schmidt1"><label>63</label><element-citation publication-type="journal" xlink:type="simple">             <person-group person-group-type="author">
<name name-style="western"><surname>Schmidt</surname><given-names>H</given-names></name>
<name name-style="western"><surname>Jirstrand</surname><given-names>M</given-names></name>
</person-group>             <year>2006</year>             <article-title>Systems biology toolbox for matlab: a computational platform for research in systems biology.</article-title>             <source>Bioinformatics</source>             <volume>22</volume>             <fpage>514</fpage>             <lpage>515</lpage>          </element-citation></ref>
</ref-list>

</back>
</article>