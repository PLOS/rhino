<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2006-2014 by Public Library of Science
  ~
  ~ http://plos.org
  ~ http://ambraproject.org
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<!--
    For performance reasons, we want the ability to lazily load Article.citedArticles.
    We do this by substituting in our own Hibernate Article mapping, since the one
    in ambra-models uses eager loading (and changing it in ambra would likely break
    things there).
  -->

<hibernate-mapping package="org.ambraproject.models" default-lazy="false">

  <class name="Article" table="article">
    <id name="ID" column="articleID" type="long">
      <generator class="native"/>
    </id>

    <timestamp name="lastModified" column="lastModified"/>
    <property name="created" column="created" type="timestamp" not-null="true" update="false"/>

    <property name="doi" column="doi" type="string" not-null="true" unique="true"/>
    <property name="title" column="title" type="text"/>
    <property name="eIssn" column="eIssn" type="string"/>
    <property name="state" column="state" type="integer"/>
    <property name="archiveName" column="archiveName" type="string"/>
    <property name="description" column="description" type="text"/>
    <property name="rights" column="rights" type="text"/>
    <property name="language" column="language" type="string"/>
    <property name="format" column="format" type="string"/>
    <property name="pages" column="pages" type="string"/>
    <property name="eLocationId" column="eLocationId" type="string"/>
    <property name="url" column="url" type="string"/>
    <property name="strkImgURI" column="strkImgURI" type="string"/>

    <property name="date" column="date" type="timestamp"/>

    <property name="volume" column="volume" type="string"/>
    <property name="issue" column="issue" type="string"/>
    <property name="journal" column="journal" type="string"/>

    <property name="publisherLocation" column="publisherLocation" type="string"/>
    <property name="publisherName" column="publisherName" type="string"/>

    <set name="types" table="articleType" cascade="all-delete-orphan">
      <key column="articleID"/>
      <element column="type" type="string"/>
    </set>

    <list name="relatedArticles" cascade="all-delete-orphan">
      <key column="parentArticleID" not-null="true"/>
      <list-index column="sortOrder"/>
      <one-to-many class="ArticleRelationship"/>
    </list>

    <list name="assets" cascade="all-delete-orphan">
      <key column="articleID"/>
      <list-index column="sortOrder"/>
      <one-to-many class="ArticleAsset"/>
    </list>

    <!--Don't want to delete orphan on these-->
    <map name="categories" cascade="save-update" table="articleCategoryJoinTable" order-by="weight" lazy="false">
      <key column="articleID"/>
      <map-key-many-to-many class="org.ambraproject.models.Category" column="categoryID" />
      <element column="weight" type="integer" not-null="true" />
    </map>

    <list name="citedArticles" cascade="all-delete-orphan" lazy="true">
      <key column="articleID"/>
      <list-index column="sortOrder"/>
      <one-to-many class="CitedArticle"/>
    </list>

    <list name="collaborativeAuthors" table="articleCollaborativeAuthors" cascade="all-delete-orphan">
      <key column="articleID"/>
      <list-index column="sortOrder"/>
      <element column="name" type="string"/>
    </list>

    <list name="authors"
          cascade="all-delete-orphan"
          where="type = 'author'">
      <key column="articleID"/>
      <list-index column="sortOrder"/>
      <one-to-many class="ArticleAuthor"/>
    </list>

    <list name="editors"
          cascade="all-delete-orphan"
          where="type = 'editor'">
      <key column="articleID"/>
      <list-index column="sortOrder"/>
      <one-to-many class="ArticleEditor"/>
    </list>

    <set name="journals" table="articlePublishedJournals" cascade="none" lazy="true">
      <key column="articleID"/>
      <many-to-many class="Journal" column="journalID"/>
    </set>

  </class>

</hibernate-mapping>
