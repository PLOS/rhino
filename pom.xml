<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2017 Public Library of Science
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a
  ~ copy of this software and associated documentation files (the "Software"),
  ~ to deal in the Software without restriction, including without limitation
  ~ the rights to use, copy, modify, merge, publish, distribute, sublicense,
  ~ and/or sell copies of the Software, and to permit persons to whom the
  ~ Software is furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in
  ~ all copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
  ~ THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  ~ FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  ~ DEALINGS IN THE SOFTWARE.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.ambraproject</groupId>
  <artifactId>rhino</artifactId>
  <name>rhino</name>
  <packaging>war</packaging>
  <version>2.5.9-SNAPSHOT</version>
  <description>Service-oriented back end for Ambra.</description>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0</url>
      <comments>Copyright (C) 2006-2012 by Public Library of Science</comments>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git@github.com:PLOS/rhino.git</connection>
    <developerConnection>scm:git:git@github.com:PLOS/rhino.git</developerConnection>
    <url>https://github.com/PLOS/rhino</url>
  </scm>

  <properties>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
    <buildDate>${maven.build.timestamp}</buildDate>
    <java-version>1.8</java-version>
    <org.springframework-version>4.3.27.RELEASE</org.springframework-version>
    <ambra.version>2.10.21</ambra.version>
    <hibernate-version>3.6.3.Final</hibernate-version>
    <conf-helper.version>2.2.1</conf-helper.version>
    <google.truth.version>0.39</google.truth.version>
    <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
    <build.timestamp>${maven.build.timestamp}</build.timestamp>
    <build.counter>0</build.counter>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <repositories>
    <repository>
      <id>ambra</id>
      <name>Maven 2 Release Repository for Ambra</name>
      <url>http://maven.ambraproject.org/maven2/release/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>ambra.snapshot</id>
      <name>Maven 2 Snapshot Repository for Ambra</name>
      <url>http://maven.ambraproject.org/maven2/snapshot/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

  <distributionManagement>
    <repository>
      <id>ambra</id>
      <url>scp://maven.ambraproject.org/home/maven2/repository/release</url>
    </repository>
    <snapshotRepository>
      <id>ambra.snapshot</id>
      <url>scp://maven.ambraproject.org/home/maven2/repository/snapshot</url>
      <uniqueVersion>false</uniqueVersion>
    </snapshotRepository>
    <site>
      <id>ambra.javadoc</id>
      <!-- This is where the site-deploy phase will put the documentation -->
      <url>scp://maven.ambraproject.org/home/maven2/javadoc</url>
    </site>
  </distributionManagement>

  <dependencies>

    <!-- General-use libraries -->
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>3.0.0</version>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.4</version>
    </dependency>

    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.3.3</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.4</version>
    </dependency>

    <dependency>
      <groupId>commons-configuration</groupId>
      <artifactId>commons-configuration</artifactId>
      <version>1.6</version>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>21.0</version>
    </dependency>

    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.5</version>
    </dependency>
    
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>${hibernate-version}</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <version>${hibernate-version}</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.tngtech.java</groupId>
      <artifactId>junit-dataprovider</artifactId>
      <version>1.10.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${org.springframework-version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>2.3.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.truth</groupId>
      <artifactId>truth</artifactId>
      <version>${google.truth.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.truth.extensions</groupId>
      <artifactId>truth-java8-extension</artifactId>
      <version>${google.truth.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>xmlunit</groupId>
      <artifactId>xmlunit</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>

    <!-- ========================= Begin Ambra inclusions ========================= -->

    <dependency>
      <groupId>org.plos</groupId>
      <artifactId>content-repo-library</artifactId>
      <version>1.6.0</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- ========================= End Ambra inclusions ========================= -->

    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
      <version>2.2.2</version>
    </dependency>

    <dependency>
      <groupId>net.sf.saxon</groupId>
      <artifactId>Saxon-HE</artifactId>
      <version>9.6.0-4</version>
    </dependency>

    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>2.3.2</version>
      <scope>test</scope>
    </dependency>

    <!-- Spring -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${org.springframework-version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${org.springframework-version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>${org.springframework-version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>${org.springframework-version}</version>
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.13.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-jcl</artifactId>
      <version>2.13.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>2.13.3</version>
    </dependency>

    <dependency>
      <groupId>org.hibernate.javax.persistence</groupId>
      <artifactId>hibernate-jpa-2.0-api</artifactId>
      <version>1.0.1.Final</version>
    </dependency>

    <!-- @Inject -->
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>1</version>
    </dependency>

    <!-- Servlet -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <version>2.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
    </dependency>

    <dependency>
      <groupId>com.bugsnag</groupId>
      <version>[3.0,4.0)</version>
      <artifactId>bugsnag-spring</artifactId>
    </dependency>

    <dependency>
      <groupId>com.mangofactory</groupId>
      <artifactId>swagger-springmvc</artifactId>
      <version>1.0.2</version>
    </dependency>

    <!-- for use by swagger-springmvc, which for some reason does not require it directly -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.11.0</version>
    </dependency>

    <dependency>
    	<groupId>com.google.auto.value</groupId>
    	<artifactId>auto-value</artifactId>
    	<version>1.5</version>
    	<scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
      <version>5.1.4</version>
    </dependency>

    <!-- For cargo (see below) -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.49</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>rhino</finalName>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <version>1.7.1</version>
        <configuration>
          <type>standalone</type>
          <container>
            <containerId>tomcat8x</containerId>
            <zipUrlInstaller>
              <url>https://repo1.maven.org/maven2/org/apache/tomcat/tomcat/8.5.50/tomcat-8.5.50.zip</url>
            </zipUrlInstaller>
            <systemProperties>
              <java.util.logging.manager>org.apache.juli.ClassLoaderLogManager</java.util.logging.manager>
              <org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH>true</org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH>
              <java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
              <ambra.platform.appContext/>
            </systemProperties>
            <dependencies>
              <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <classpath>extra</classpath>
              </dependency>
            </dependencies>
            <systemProperties>
              <org.apache.tomcat.util.digester.PROPERTY_SOURCE>org.apache.tomcat.util.digester.Digester$EnvironmentPropertySource</org.apache.tomcat.util.digester.PROPERTY_SOURCE>
            </systemProperties>
          </container>
          <configuration>
            <properties>
              <cargo.servlet.port>8082</cargo.servlet.port>
              <cargo.tomcat.ajp.port>0</cargo.tomcat.ajp.port>
              <cargo.rmi.port>0</cargo.rmi.port>
            </properties>
          </configuration>
          <deployables>
            <deployable>
              <groupId>org.ambraproject</groupId>
              <artifactId>rhino</artifactId>
              <type>war</type>
              <location>${project.build.directory}/${project.build.finalName}</location>
              <properties>
                <context>/v2</context>
              </properties>
            </deployable>
          </deployables>
        </configuration>
      </plugin>

      <!--warpath plugin allows us to use warpath dependencies to get transitive dependencies from the war-->
      <plugin>
        <groupId>org.appfuse</groupId>
        <artifactId>maven-warpath-plugin</artifactId>
        <version>2.0</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>add-classes</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1.1</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>${java-version}</source>
          <target>${java-version}</target>
          <compilerArgument>-Xlint:all</compilerArgument>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.8</version>
        <configuration>
          <argLine>-Xms1024m -Xmx2048m -XX:MaxPermSize=1024m</argLine>
          <parallel>false</parallel>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.0-beta-7</version>
        <configuration>
          <goals>deploy</goals>
          <!-- disable site deploy -->
          <useReleaseProfile>false</useReleaseProfile>
          <!-- no javadoc and source jars -->
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <preparationGoals>clean install</preparationGoals>
          <arguments>-Ppackages,distribution,release</arguments>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <configuration>
          <mainClass>org.test.int1.Main</mainClass>
        </configuration>
      </plugin>

      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <version>2.1.9</version>
        <executions>
          <execution>
            <goals>
              <goal>revision</goal>
            </goals>
          </execution>
        </executions>

        <configuration>
          <prefix>git</prefix>
          <dateFormat>dd.MM.yyyy '@' HH:mm:ss z</dateFormat>
          <verbose>true</verbose>
          <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
          <skipPoms>true</skipPoms>
          <generateGitPropertiesFile>false</generateGitPropertiesFile>
          <generateGitPropertiesFilename>src/main/resources/git.properties</generateGitPropertiesFilename>
          <failOnNoGitDirectory>false</failOnNoGitDirectory>
          <skip>false</skip>
          <excludeProperties/>
          <gitDescribe>
            <skip>false</skip>
            <always>false</always>
            <abbrev>7</abbrev>
            <dirty>-dirty</dirty>
            <forceLongFormat>false</forceLongFormat>
          </gitDescribe>
        </configuration>
      </plugin>

      <plugin>
        <!-- Deploy the web site -->
        <groupId>com.github.github</groupId>
        <artifactId>site-maven-plugin</artifactId>
        <version>0.9</version>
        <executions>
           <execution>
             <goals>
               <goal>site</goal>
             </goals>
             <!-- select the Maven phase in which the plugin will be executed -->
             <phase>site</phase>
             <configuration>
               <server>github</server>
               <!-- The commit message -->
               <message>Building javadocs rhino</message>
               <!-- Use merge or override the content -->
               <merge>true</merge>

               <outputDirectory>target/site/apidocs</outputDirectory>
             </configuration>
           </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>jib-maven-plugin</artifactId>
        <version>2.1.0</version>
        <configuration>
          <to>
            <image>docker.io/plos/rhino:${project.version}</image>
          </to>
          <from>
            <image>docker.io/plos/tomcat:latest</image>
          </from>
          <container>
            <appRoot>/usr/local/tomcat/webapps/rhino</appRoot>
          </container>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <reporting>
     <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>2.9.1</version>
            <configuration>
               <show>package</show>
            </configuration>
        </plugin>
     </plugins>
  </reporting>

</project>
